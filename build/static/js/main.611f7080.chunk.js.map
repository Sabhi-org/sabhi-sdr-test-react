{"version":3,"sources":["images/dark.svg","components/SplashScreen.js","components/Antd-form.js","components/UserProfile.js","images/onboarding.png","components/OnBoardScreen.js","components/webcam.js","components/IdentityCardFrontScan.js","components/IdentityCardBackScan.js","App.js","index.js","axios-instance.js"],"names":["SplashScreen","history","useHistory","useEffect","interval","setTimeout","a","push","clearInterval","class","style","display","justifyContent","alignItems","width","src","Logo","Antdform","did","localStorage","getItem","Form","useForm","form","useState","setIsloading","images","setImages","getOcrRecord","sabhiApiInstance","get","response","data","identityCardFrontData","identityCardBackData","profileImage","identityCardFrontImage","identityCardBackImage","setFieldsValue","fullName","nameEnglish","fatherName","fatherNameEnglish","gender","countryOfStay","identityNumber","issueDate","dateOfIssue","birthDate","dateOfBirth","expireDate","dateOfExpiry","permanentAddress","permenantAddress","temporaryAddress","presentAddress","console","log","createVerifiablePresentation","values","apiInstance","post","error","layout","name","onFinish","pathname","onFinishFailed","errorInfo","Item","label","required","tooltip","placeholder","type","htmlType","UserProfile","setOmniData","isLoading","getData","socket","test","value","message","io","on","swalWithBootstrapButtons","Swal","mixin","customClass","confirmButton","cancelButton","buttonsStyling","fire","title","html","allowOutsideClick","icon","showCancelButton","confirmButtonText","cancelButtonText","reverseButtons","then","result","isConfirmed","emit","status","dismiss","DismissReason","cancel","handleswirlTwo","size","spinning","marginTop","span","gutter","className","disabled","offset","OnBoardScreen","createIdentity","loading","setItem","success","height","OnBoardImage","shape","position","top","background","bordeRadius","onClick","Webcam","webcamElement","canvasElement","this","aspectRatio","Promise","resolve","reject","undefined","navigator","mediaDevices","getUserMedia","audio","video","facingMode","mediaStream","srcObject","window","URL","createObjectURL","onloadedmetadata","e","play","imageWidth","videoWidth","imageHeight","videoHeight","context","getContext","drawImage","_drawImage","toBlob","blob","quality","base64","toDataURL","IdentityCardFrontScan","captureImage","capturedData","webcam","takeBase64Photo","setState","captured","capturedImage","discardImage","uploadImage","props","offline","rs","Math","random","toString","substr","state","alert","file","checkUploadStatus","catch","findLocalItems","query","i","results","hasOwnProperty","match","key","val","batchUploads","length","uploading","document","createElement","getElementById","setup","prevProps","imageDisplay","alt","buttons","autoPlay","playsInline","muted","id","Component","IdentityCardBackScan","App","path","component","exact","antsdrform","ReactDOM","render","axios","require","create","baseURL","module","exports"],"mappings":"qOAAe,MAA0B,iC,gBCM1B,SAASA,IACpB,IAAIC,EAAUC,cAed,OAZAC,qBAAU,WAEN,IAAIC,EAAWC,WAAU,sBAAC,sBAAAC,EAAA,sDACtBL,EAAQM,KAAK,YADS,2CAEvB,KAGH,OAAO,WACHC,cAAcJ,MAEnB,IAGC,qBAAKK,MAAM,YAAYC,MAfb,CAAEC,QAAS,cAAeC,eAAgB,SAAUC,WAAY,SAAUC,MAAO,SAe3F,SACI,qBAAKC,IAAKC,EAAMF,MAAM,Y,+CCfnB,SAASG,IACpB,IAAMC,EAAMC,aAAaC,QAAQ,OAC7BnB,EAAUC,cAFiB,EAGhBmB,IAAKC,UAAbC,EAHwB,sBAIGC,mBAAS,SAJZ,mBAIbC,GAJa,aAKHD,mBAAS,IALN,mBAKxBE,EALwB,KAKhBC,EALgB,KAOzBC,EAAY,uCAAG,wCAAAtB,EAAA,sEAEbmB,GAAa,GAFA,SAGUI,mBAAiBC,IAAjB,cAA4BZ,IAHtC,OAGPa,EAHO,SAIwGA,EAASC,KAAKA,KAAK,GAAhIC,EAJK,EAILA,sBAAuBC,EAJlB,EAIkBA,qBAAsBC,EAJxC,EAIwCA,aAAcC,EAJtD,EAIsDA,uBAAwBC,EAJ9E,EAI8EA,sBAC3FV,EAAU,CAAEQ,aAAcA,EAAcC,uBAAwBA,EAAwBC,sBAAuBA,IAC/Gd,EAAKe,eAAe,CAChBC,SAAUN,EAAsBO,YAChCC,WAAYR,EAAsBS,kBAClCC,OAAQV,EAAsBU,OAC9BC,cAAeX,EAAsBW,cACrCC,eAAgBZ,EAAsBY,eACtCC,UAAWb,EAAsBc,YACjCC,UAAWf,EAAsBgB,YACjCC,WAAYjB,EAAsBkB,aAClCC,iBAAkBlB,EAAqBmB,iBACvCC,iBAAkBpB,EAAqBqB,iBAE3C9B,GAAa,GAlBA,kDAoBb+B,QAAQC,IAAR,MApBa,0DAAH,qDAwBlBtD,qBAAU,WACNyB,MACD,IAGH,IAAM8B,EAA4B,uCAAG,WAAOC,GAAP,SAAArD,EAAA,+EAENsD,cAAYC,KAAK,KAAMF,GAFjB,6DAI7BH,QAAQM,MAAR,MAJ6B,wDAAH,sDA2BlC,OACQ,eAAC,IAAD,CACIC,OAAO,aACPxC,KAAMA,EACNyC,KAAK,QACLC,SAxBK,SAACN,GACdH,QAAQC,IAAIE,GACZlC,GAAa,GACbkC,EAAOxB,aAAeT,EAAOS,aAC7BwB,EAAOzC,IAAMA,EACbyC,EAAOtB,sBAAwBX,EAAOW,sBACtCsB,EAAOvB,uBAAyBV,EAAOU,uBACvCsB,EAA6BC,GAC7BlC,GAAa,GACbxB,EAAQM,KAAK,CACT2D,SAAU,mBAeNC,eAXW,SAACC,GACpBZ,QAAQC,IAAI,UAAWW,IAKnB,UAOI,cAAC,IAAKC,KAAN,CAAWC,MAAM,OAAOC,UAAQ,EAACC,QAAQ,2BAA2BR,KAAK,WAAzE,SACI,cAAC,IAAD,CAAOS,YAAY,wBAEvB,cAAC,IAAKJ,KAAN,CAAWC,MAAM,cAAcC,UAAQ,EAACC,QAAQ,2BAA2BR,KAAK,aAAhF,SACI,cAAC,IAAD,CAAOS,YAAY,wBAEvB,cAAC,IAAKJ,KAAN,CAAWC,MAAM,SAASC,UAAQ,EAACC,QAAQ,2BAA2BR,KAAK,SAA3E,SACI,cAAC,IAAD,CAAOS,YAAY,wBAEvB,cAAC,IAAKJ,KAAN,CAAWC,MAAM,kBAAkBC,UAAQ,EAACC,QAAQ,2BAA2BR,KAAK,gBAApF,SACI,cAAC,IAAD,CAAOS,YAAY,wBAEvB,cAAC,IAAKJ,KAAN,CAAWC,MAAM,kBAAkBC,UAAQ,EAACC,QAAQ,2BAA2BR,KAAK,iBAApF,SACI,cAAC,IAAD,CAAOS,YAAY,wBAEvB,cAAC,IAAKJ,KAAN,CAAWC,MAAM,gBAAgBC,UAAQ,EAACC,QAAQ,2BAA2BR,KAAK,YAAlF,SACI,cAAC,IAAD,CAAOS,YAAY,wBAEvB,cAAC,IAAKJ,KAAN,CAAWC,MAAM,gBAAgBC,UAAQ,EAACC,QAAQ,2BAA2BR,KAAK,YAAlF,SACI,cAAC,IAAD,CAAOS,YAAY,wBAEvB,cAAC,IAAKJ,KAAN,CAAWC,MAAM,iBAAiBC,UAAQ,EAACC,QAAQ,2BAA2BR,KAAK,aAAnF,SACI,cAAC,IAAD,CAAOS,YAAY,wBAEvB,cAAC,IAAKJ,KAAN,CAAWC,MAAM,oBAAoBC,UAAQ,EAACC,QAAQ,2BAA2BR,KAAK,mBAAtF,SACI,cAAC,IAAD,CAAOS,YAAY,wBAEvB,cAAC,IAAKJ,KAAN,CAAWC,MAAM,oBAAoBC,UAAQ,EAACC,QAAQ,2BAA2BR,KAAK,mBAAtF,SACI,cAAC,IAAD,CAAOS,YAAY,wBAEvB,cAAC,IAAKJ,KAAN,UACI,cAAC,IAAD,CAAQK,KAAK,UAAUC,SAAS,SAAhC,yB,8FCxGL,SAASC,IAAe,IAAD,EAC5B1D,EAAMC,aAAaC,QAAQ,OACjCoC,QAAQC,IAAItC,aAAaC,QAAQ,QAFC,MAGFI,mBAAS,IAHP,mBAGjBqD,GAHiB,aAInBxD,IAAKC,UAAbC,EAJ2B,sBAKAC,mBAAS,SALT,mBAK3BsD,EAL2B,KAKhBrD,EALgB,OAMFD,mBAAS,MANP,gCAONA,mBAAS,KAPH,mBAO3BE,EAP2B,KAOnBC,EAPmB,KASlCxB,qBAAU,YATwB,mCAU9B4E,KACD,IAGH,IACIC,EADAC,EAAO,GAduB,4CAmClC,oDAAA3E,EAAA,sEAEQmB,GAAa,GAFrB,SAG+BI,mBAAiBC,IAAjB,sBAAoCZ,IAHnE,OAGca,EAHd,OAIQyB,QAAQC,IAAI1B,EAASC,KAAKA,KAAK,IAJvC,EAKoKD,EAASC,KAAKA,KAAK,GAAvKO,EALhB,EAKgBA,SAAUE,EAL1B,EAK0BA,WAAYN,EALtC,EAKsCA,aAAcS,EALpD,EAKoDA,cAAeD,EALnE,EAKmEA,OAAQE,EAL3E,EAK2EA,eAAgBC,EAL3F,EAK2FA,UAAWE,EALtG,EAKsGA,UAAWE,EALjH,EAKiHA,WAAYE,EAL7H,EAK6HA,iBAAkBE,EAL/I,EAK+IA,iBACvI3B,EAAU,CAAEQ,aAAcA,IAC1BZ,EAAKe,eAAe,CAChBC,SAAUA,EAAS2C,MACnBzC,WAAYA,EAAWyC,MACvBvC,OAAQA,EAAOuC,MACftC,cAAeA,EAAcsC,MAC7BrC,eAAgBA,EAAeqC,MAC/BpC,UAAWA,EAAUoC,MACrBlC,UAAWA,EAAUkC,MACrBhC,WAAYA,EAAWgC,MACvB9B,iBAAkBA,EAAiB8B,MACnC5B,iBAAkBA,EAAiB4B,QAEvCzD,GAAa,GAnBrB,kDAqBQ0D,IAAQrB,MAAM,wBAAd,MArBR,2DAnCkC,sBAuGlC,OAtFA3D,qBAAU,WAGN6E,EAASI,aADQ,2BAEjB5B,QAAQC,IAAIuB,GACZA,EAAOK,GAAG,QAAQ,SAAArD,GACdwB,QAAQC,IAAIzB,MAGhBgD,EAAOK,GAAG,oBAAoB,SAAArD,GAC1BwB,QAAQC,IAAIzB,GACZiD,EAAOjD,EAAKmD,QACZN,EAAY7C,EAAKmD,SA+BzB,WACI,IAAMG,EAA2BC,IAAKC,MAAM,CACxCC,YAAa,CACTC,cAAe,kBACfC,aAAc,kBAElBC,gBAAgB,IAEpBN,EAAyBO,KAAK,CAC1BC,MAAO,2BACPC,KAAK,GAAD,OAAKd,GACTe,mBAAmB,EACnBC,KAAM,UACNC,kBAAkB,EAClBC,kBAAmB,gBACnBC,iBAAkB,kBAClBC,gBAAgB,IACjBC,MAAK,SAACC,GACDA,EAAOC,aACPhD,QAAQC,IAAI,uBACZuB,EAAOyB,KAAK,eAAgB,CAAEC,QAAQ,EAAMvB,QAAS,sBACrDG,EAAyBO,KACrB,aACA,+BACA,YAIJU,EAAOI,UAAYpB,IAAKqB,cAAcC,SAEtCrD,QAAQC,IAAI,qBACZuB,EAAOyB,KAAK,eAAgB,CAAEC,QAAQ,EAAOvB,QAAS,sBACtDG,EAAyBO,KACrB,YACA,sCACA,aAjERiB,QAGL,IAuEC,8BACI,cAAC,IAAD,CAAOC,KAAK,QAAZ,SACI,eAAC,IAAD,CAAMC,SAAUlC,EAAhB,UACI,eAAC,IAAD,CACIpE,MAAO,CAAEuG,UAAW,QACpBlD,OAAO,WACPxC,KAAMA,EACNyC,KAAK,QAJT,UAMI,eAAC,IAAD,WACI,cAAC,IAAD,CAAKkD,KAAM,EAAX,SACI,cAAC,IAAD,CACIxG,MAAO,CAAEuG,UAAW,QACpBlG,IAAK,cAAC,IAAD,CAAOA,IAAG,UAAEW,EAAOS,oBAAT,QAAyB,qEACxC4E,KAAM,QAGd,eAAC,IAAD,CAAKG,KAAM,GAAX,UACI,eAAC,IAAD,CAAKC,OAAQ,GAAb,UACI,cAAC,IAAD,CAAKC,UAAU,aAAaF,KAAM,IAElC,cAAC,IAAD,CAAKE,UAAU,aAAaF,KAAM,GAAlC,SACI,cAAC,IAAK7C,KAAN,CACIC,MAAM,OACNN,KAAK,WAFT,SAGI,cAAC,IAAD,CAAO+C,KAAK,QAAQM,UAAQ,QAGpC,cAAC,IAAD,CAAKD,UAAU,aAAaF,KAAM,GAAlC,SACI,cAAC,IAAK7C,KAAN,CACIC,MAAM,cACNN,KAAK,aAFT,SAGI,cAAC,IAAD,CAAO+C,KAAK,QAAQM,UAAQ,WAIxC,eAAC,IAAD,CAAKF,OAAQ,GAAIG,OAAQ,EAAzB,UACI,cAAC,IAAD,CAAKF,UAAU,aAAaF,KAAM,IAElC,cAAC,IAAD,CAAKE,UAAU,aAAaF,KAAM,GAAlC,SACI,cAAC,IAAK7C,KAAN,CACIC,MAAM,SACNN,KAAK,SAFT,SAGI,cAAC,IAAD,CAAO+C,KAAK,QAAQM,UAAQ,QAGpC,cAAC,IAAD,CAAKD,UAAU,aAAaF,KAAM,GAAlC,SACI,cAAC,IAAK7C,KAAN,CACIC,MAAM,kBACNN,KAAK,gBAFT,SAGI,cAAC,IAAD,CAAO+C,KAAK,QAAQM,UAAQ,QAGpC,cAAC,IAAD,CAAKD,UAAU,aAAaF,KAAM,aAK9C,eAAC,IAAD,WACI,eAAC,IAAD,CAAKC,OAAQ,GAAb,UACI,cAAC,IAAD,CAAKC,UAAU,aAAaF,KAAM,EAAlC,SACI,cAAC,IAAK7C,KAAN,CACIC,MAAM,kBACNN,KAAK,iBAFT,SAGI,cAAC,IAAD,CAAO+C,KAAK,QAAQM,UAAQ,QAGpC,cAAC,IAAD,CAAKD,UAAU,aAAaF,KAAM,EAAlC,SACI,cAAC,IAAK7C,KAAN,CACIC,MAAM,gBACNN,KAAK,YAFT,SAGI,cAAC,IAAD,CAAO+C,KAAK,QAAQM,UAAQ,QAGpC,cAAC,IAAD,CAAKD,UAAU,aAAaF,KAAM,EAAlC,SACI,cAAC,IAAK7C,KAAN,CACIC,MAAM,gBACNN,KAAK,YAFT,SAGI,cAAC,IAAD,CAAO+C,KAAK,QAAQM,UAAQ,QAGpC,cAAC,IAAD,CAAKD,UAAU,aAAaF,KAAM,EAAlC,SACI,cAAC,IAAK7C,KAAN,CACIC,MAAM,iBACNN,KAAK,aAFT,SAGI,cAAC,IAAD,CAAO+C,KAAK,QAAQM,UAAQ,WAIxC,eAAC,IAAD,CAAKH,KAAM,GAAX,UACI,cAAC,IAAK7C,KAAN,CACIC,MAAM,oBACNN,KAAK,mBAFT,SAGI,cAAC,IAAD,CAAO+C,KAAK,QAAQM,UAAQ,MAEhC,cAAC,IAAKhD,KAAN,CACIC,MAAM,oBACNN,KAAK,mBAFT,SAGI,cAAC,IAAD,CAAO+C,KAAK,QAAQM,UAAQ,eAK5C,cAAC,IAAD,sCCtNL,UAA0B,uCCQ1B,SAASE,IACpB,IAAItH,EAAUC,cAIRsH,EAAc,uCAAG,sBAAAlH,EAAA,sDACnB,IACI6E,IAAQsC,QAAQ,uBAAwB,IACnCnB,KADL,sBACU,4BAAAhG,EAAA,sEACqBsD,cAAY9B,IAAI,OADrC,QACIC,EADJ,UAGEZ,aAAauG,QAAQ,MAAO3F,EAASC,KAAKd,KAC1CsC,QAAQC,IAAItC,aAAaC,QAAQ,QAEjC+D,IAAQwC,QAAQ,iCACXrB,MAAK,kBAAMnB,IAAQsC,QAAQ,iBAAkB,GACzCnB,MAAK,kBAAMrG,EAAQM,KAAK,qBARnC,4CAYZ,MAAOuD,GACLqB,IAAQrB,MAAM,0CAhBC,2CAAH,qDAoBpB,OAEI,sBAAKrD,MAAM,YAAYC,MAzBb,CAAEC,QAAS,cAAeC,eAAgB,SAAUC,WAAY,SAAUC,MAAO,QAAS8G,OAAQ,SAyB5G,UACI,qBAAK7G,IAAK8G,EAAc/G,MAAM,UAC9B,cAAC,IAAD,CAAQ4D,KAAK,UAAUoD,MAAM,QAAQpH,MA1B5B,CAAEqH,SAAU,WAAYC,IAAK,QAASC,WAAY,UAAWC,YAAa,OAAQ,YAAe,WA0BpDnB,KAAK,QAAQoB,QAASX,EAA5E,gC,sCCrCCY,EAAb,WACI,WAAYC,EAAeC,GAAgB,oBACvCC,KAAKF,cAAgBA,EACrBE,KAAKD,cAAgBA,EAH7B,mDAMI,SAAgBxH,EAAO8G,GACnB,IAAMY,EAAc1H,EAAQ8G,EACxB9G,GAAS8G,EACTW,KAAKF,cAAcvH,MAAQ0H,EAAcD,KAAKF,cAAcT,OACrD9G,EAAQ8G,IACfW,KAAKF,cAAcT,OAASW,KAAKF,cAAcvH,MAAQ0H,KAXnE,0DAeI,iCAAAlI,EAAA,+EACW,IAAImI,SAAQ,SAACC,EAASC,QACmBC,IAAxCC,UAAUC,aAAaC,aACvBF,UAAUC,aAAaC,aAAa,CAAEC,OAAO,EAAOC,MAAO,CAAEC,WAAY,iBACpE5C,MAAK,SAAC6C,GACC,cAAe,EAAKd,eACpB,EAAKA,cAAce,UAAYD,EAC/B3F,QAAQC,IAAI,SAGZ,EAAK4E,cAActH,IAAMsI,OAAOC,IAAIC,gBAAgBJ,GAExD,EAAKd,cAAcmB,iBAAmB,SAACC,GACnC,EAAKpB,cAAcqB,WAI/Bf,QAjBZ,2CAfJ,8EAqCI,WACI,IAAMgB,EAAapB,KAAKF,cAAcuB,WAChCC,EAActB,KAAKF,cAAcyB,YAEjCC,EAAUxB,KAAKD,cAAc0B,WAAW,MAM9C,OALAzB,KAAKD,cAAcxH,MAAQ6I,EAC3BpB,KAAKD,cAAcV,OAASiC,EAE5BE,EAAQE,UAAU1B,KAAKF,cAAe,EAAG,EAAGsB,EAAYE,GAEjD,CAAEA,cAAaF,gBA/C9B,2BAkDI,WAAiB,IAAD,SACwBpB,KAAK2B,aAAjCP,EADI,EACJA,WAAYE,EADR,EACQA,YACpB,OAAO,IAAIpB,SAAQ,SAACC,EAASC,GACzB,EAAKL,cAAc6B,QAAO,SAACC,GACvB1B,EAAQ,CAAE0B,OAAMP,cAAaF,uBAtD7C,6BA2DI,WAAkE,IAAD,yDAA7B,CAAEjF,KAAM,MAAO2F,QAAS,GAA1C3F,EAA+C,EAA/CA,KAAM2F,EAAyC,EAAzCA,QAAyC,EACzB9B,KAAK2B,aAAjCL,EADqD,EACrDA,YAAaF,EADwC,EACxCA,WACfW,EAAS/B,KAAKD,cAAciC,UAAU,SAAW7F,EAAM2F,GAC7D,MAAO,CAAEC,SAAQT,cAAaF,kBA9DtC,KC6Kea,E,kDAtKX,aAAe,IAAD,8BACV,gBAwEJC,aAzEc,sBAyEC,4BAAAnK,EAAA,sDACLoK,EAAe,EAAKC,OAAOC,gBAAgB,CAAElG,KAAM,OAAQ2F,QAAS,KAC1E7G,QAAQC,IAAIiH,EAAaJ,QACzB,EAAKO,SAAS,CACVC,UAAU,EACVC,cAAeL,EAAaJ,SALrB,2CAzED,EAkFdU,aAAe,WACX,EAAKH,SAAS,CACVC,UAAU,EACVC,cAAe,QArFT,EAyFdE,YAAc,WACV,GAAI,EAAKC,MAAMC,QAAS,CACpB3H,QAAQC,IAAI,oCAEZ,IAEM2H,EAAKC,KAAKC,SAASC,SAAS,IAAIC,OAAO,EAAG,GAChDrK,aAAauG,QAAb,UAHe,eAGf,OAAiC0D,GAAM,EAAKK,MAAMV,eAClDW,MAAM,6GACN,EAAKV,oBAGL,EAAKH,SAAS,CAAE,WAAa,IAC7BhJ,mBAAiBgC,KAAjB,iBAEI,CACI8H,KAAM,EAAKF,MAAMV,cACjB7J,IAAKC,aAAaC,QAAQ,SAEhCkF,MACE,SAACtE,GAAD,OAAU,EAAK4J,kBAAkB5J,MAEhC6J,OAAM,SAAC/H,GACJ4H,MAAM,uDACN,EAAKb,SAAS,CAAE,WAAa,QAjH/B,EAsHdiB,eAAiB,SAACC,GACd,IAAIC,EAAGC,EAAU,GACjB,IAAKD,KAAK7K,aACN,GAAIA,aAAa+K,eAAeF,KACxBA,EAAEG,MAAMJ,KAAYA,GAAsB,kBAANC,GAAiB,CACrD,IAAM9G,EAAQ/D,aAAaC,QAAQ4K,GACnCC,EAAQ1L,KAAK,CAAE6L,IAAKJ,EAAGK,IAAKnH,IAIxC,OAAO+G,GAhIG,EAmIdL,kBAAoB,SAAC5J,GACjB,EAAK6I,SAAS,CAAE,WAAa,IACT,MAAhB7I,EAAK0E,QACLgF,MAAM,yCACN,EAAKR,MAAMjL,QAAQM,KAAK,aACxB,EAAKyK,gBAELU,MAAM,wDA1IA,EA6IdY,aAAe,WAEX,IAAM5K,EAAS,EAAKoK,eAAe,gBAEnC,GAAIpK,EAAO6K,OAAS,EAAG,CACnB,EAAK1B,SAAS,CAAE,WAAa,IAC7B,IAAK,IAAImB,EAAI,EAAGA,EAAItK,EAAO6K,OAAQP,IAE/BnK,mBAAiBgC,KAAjB,iBAEI,CACI8H,KAAMjK,EAAOsK,GAAGK,IAChBnL,IAAKC,aAAaC,QAAQ,SAEhCkF,MAAK,SAACtE,GAAD,OAAU,EAAK4J,kBAAkB5J,MAAO6J,OAAM,SAAC/H,IAC1C,KAGhB,EAAK+G,SAAS,CAAE,WAAa,IAEzBa,MAAM,qEA/Jd,EAAKf,OAAS,KACd,EAAKc,MAAQ,CACTV,cAAe,KACfD,UAAU,EAEV0B,WAAW,GAPL,E,qDAad,WAEIjE,KAAKD,cAAgBmE,SAASC,cAAc,UAC5CnE,KAAKoC,OAAS,IAAIvC,EACdqE,SAASE,eAAe,UACxBpE,KAAKD,eAETC,KAAKoC,OAAOiC,QAAQf,OAAM,WACtBH,MAAM,4C,gCAId,SAAmBmB,GACVtE,KAAK2C,MAAMC,UAAkC,IAAtB0B,EAAU1B,SAElC5C,KAAK+D,iB,oBAIb,WAEI,IAAM5L,EAAQ,GACV6H,KAAKkD,MAAMX,WACXpK,EAAMC,QAAU,QAEpB,IAAMmM,EAAevE,KAAKkD,MAAMV,cAC5B,qBAAKhK,IAAKwH,KAAKkD,MAAMV,cAAegC,IAAI,WAAWjM,MAAM,QAEzD,yBAEEkM,EAAUzE,KAAKkD,MAAMX,SACvB,gCACI,wBAAQ1D,UAAU,eAAee,QAASI,KAAKyC,aAA/C,4BACA,wBAAQ5D,UAAU,gBAAgBe,QAASI,KAAK0C,YAAhD,+BAEJ,wBAAQ7D,UAAU,gBAAgBe,QAASI,KAAKkC,aAAhD,4BAEE+B,EAAYjE,KAAKkD,MAAMe,UACzB,8BAAK,qEAEL,yBAEJ,OACI,gCACI,wCACCA,EACD,uBAAOS,UAAQ,EAACC,aAAW,EAACC,OAAK,EAACC,GAAG,SAAStM,MAAM,OAAOJ,MAAOA,IAClE,uBAGI6H,KAAKkD,MAAMX,UAAY,qBAAK1D,UAAU,cAAf,SAClB0F,IAIRE,S,GArEmBK,aCyKrBC,E,kDArKX,aAAe,IAAD,8BACV,gBAwEJ7C,aAzEc,sBAyEC,4BAAAnK,EAAA,sDACLoK,EAAe,EAAKC,OAAOC,gBAAgB,CAAElG,KAAM,OAAQ2F,QAAS,KAC1E7G,QAAQC,IAAIiH,EAAaJ,QACzB,EAAKO,SAAS,CACVC,UAAU,EACVC,cAAeL,EAAaJ,SALrB,2CAzED,EAkFdU,aAAe,WACX,EAAKH,SAAS,CACVC,UAAU,EACVC,cAAe,QArFT,EAyFdE,YAAc,WACV,GAAI,EAAKC,MAAMC,QAAS,CACpB3H,QAAQC,IAAI,oCAEZ,IAEM2H,EAAKC,KAAKC,SAASC,SAAS,IAAIC,OAAO,EAAG,GAChDrK,aAAauG,QAAb,UAHe,eAGf,OAAiC0D,GAAM,EAAKK,MAAMV,eAClDW,MAAM,6GACN,EAAKV,oBAGL,EAAKH,SAAS,CAAE,WAAa,IAC7BhJ,mBAAiBgC,KAAjB,iBAEI,CACI8H,KAAM,EAAKF,MAAMV,cACjB7J,IAAKC,aAAaC,QAAQ,SAEhCkF,MACE,SAACtE,GAAD,OAAU,EAAK4J,kBAAkB5J,MAEhC6J,OAAM,SAAC/H,GACJ4H,MAAM,uDACN,EAAKb,SAAS,CAAE,WAAa,QAjH/B,EAsHdiB,eAAiB,SAACC,GACd,IAAIC,EAAGC,EAAU,GACjB,IAAKD,KAAK7K,aACN,GAAIA,aAAa+K,eAAeF,KACxBA,EAAEG,MAAMJ,KAAYA,GAAsB,kBAANC,GAAiB,CACrD,IAAM9G,EAAQ/D,aAAaC,QAAQ4K,GACnCC,EAAQ1L,KAAK,CAAE6L,IAAKJ,EAAGK,IAAKnH,IAIxC,OAAO+G,GAhIG,EAmIdL,kBAAoB,SAAC5J,GACjB,EAAK6I,SAAS,CAAE,WAAa,IACT,MAAhB7I,EAAK0E,QACLgF,MAAM,yCACN,EAAKV,gBAELU,MAAM,wDAzIA,EA4IdY,aAAe,WAEX,IAAM5K,EAAS,EAAKoK,eAAe,gBAEnC,GAAIpK,EAAO6K,OAAS,EAAG,CACnB,EAAK1B,SAAS,CAAE,WAAa,IAC7B,IAAK,IAAImB,EAAI,EAAGA,EAAItK,EAAO6K,OAAQP,IAE/BnK,mBAAiBgC,KAAjB,iBAEI,CACI8H,KAAMjK,EAAOsK,GAAGK,IAChBnL,IAAKC,aAAaC,QAAQ,SAEhCkF,MAAK,SAACtE,GAAD,OAAU,EAAK4J,kBAAkB5J,MAAO6J,OAAM,SAAC/H,IAC1C,KAGhB,EAAK+G,SAAS,CAAE,WAAa,IAEzBa,MAAM,qEA9Jd,EAAKf,OAAS,KACd,EAAKc,MAAQ,CACTV,cAAe,KACfD,UAAU,EAEV0B,WAAW,GAPL,E,qDAad,WAEIjE,KAAKD,cAAgBmE,SAASC,cAAc,UAC5CnE,KAAKoC,OAAS,IAAIvC,EACdqE,SAASE,eAAe,UACxBpE,KAAKD,eAETC,KAAKoC,OAAOiC,QAAQf,OAAM,WACtBH,MAAM,4C,gCAId,SAAmBmB,GACVtE,KAAK2C,MAAMC,UAAkC,IAAtB0B,EAAU1B,SAElC5C,KAAK+D,iB,oBAIb,WAEI,IAAM5L,EAAQ,GACV6H,KAAKkD,MAAMX,WACXpK,EAAMC,QAAU,QAEpB,IAAMmM,EAAevE,KAAKkD,MAAMV,cAC5B,qBAAKhK,IAAKwH,KAAKkD,MAAMV,cAAegC,IAAI,WAAWjM,MAAM,QAEzD,yBAEEkM,EAAUzE,KAAKkD,MAAMX,SACvB,gCACI,wBAAQ1D,UAAU,eAAee,QAASI,KAAKyC,aAA/C,4BACA,wBAAQ5D,UAAU,gBAAgBe,QAASI,KAAK0C,YAAhD,+BAEJ,wBAAQ7D,UAAU,gBAAgBe,QAASI,KAAKkC,aAAhD,4BAEE+B,EAAYjE,KAAKkD,MAAMe,UACzB,8BAAK,qEAEL,yBAEJ,OACI,gCACI,wCACCA,EACD,uBAAOS,UAAQ,EAACC,aAAW,EAACC,OAAK,EAACC,GAAG,SAAStM,MAAM,OAAOJ,MAAOA,IAClE,uBAGI6H,KAAKkD,MAAMX,UAAY,qBAAK1D,UAAU,cAAf,SAClB0F,IAIRE,S,GAvEkBK,aCiBpB,SAASE,IAEtB,OACE,qBAAKnG,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOoG,KAAK,IAAIC,UAAWzN,EAAc0N,OAAK,IAC9C,cAAC,IAAD,CAAOF,KAAK,WAAWC,UAAWlG,IAClC,cAAC,IAAD,CAAOiG,KAAK,aAAaC,UAAWjD,IACpC,cAAC,IAAD,CAAOgD,KAAK,YAAYC,UAAWH,IACnC,cAAC,IAAD,CAAOE,KAAK,YAAYC,UAAWE,IACnC,cAAC,IAAD,CAAOH,KAAK,gBAAgBC,UAAW7I,S,wCCxB/CgJ,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFpB,SAASE,eAAe,U,mBCd1B,IAAMmB,EAAQC,EAAQ,KAEhBnK,EAAckK,EAAME,OAAO,CAG7BC,QAAS,gDAGPpM,EAAmBiM,EAAME,OAAO,CAElCC,QAAS,4BAGbC,EAAOC,QAAU,CACbvK,cACA/B,sB","file":"static/js/main.611f7080.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/dark.e4d8b6e7.svg\";","import React, { useEffect } from 'react';\nimport { Row, Col, Space } from 'antd';\nimport { useHistory } from 'react-router-dom';\nimport Logo from '../images/dark.svg';\nimport '../App.css';\n\nexport default function SplashScreen() {\n    let history = useHistory();\n    const style = { display: 'inline-flex', justifyContent: 'center', alignItems: 'center', width: '500px' };\n\n    useEffect(() => {\n\n        let interval = setTimeout(async () => {\n            history.push('/onboard');\n        }, 3000);\n\n        // willUnmout called\n        return () => {\n            clearInterval(interval);\n        }\n    }, []);\n\n    return (\n        <div class=\"container\" style={style}>\n            <img src={Logo} width=\"200px\" />\n        </div>\n    );\n}","// importing antd components------------------------->\nimport React, { useEffect, useState } from 'react';\nimport { Form, Input, Button, Col, Row, Image, Avatar, Spin, Space } from 'antd';\nimport { useHistory } from 'react-router-dom';\nimport { sabhiApiInstance, apiInstance } from '../axios-instance';\nimport { InfoCircleOutlined } from '@ant-design/icons';\n\n// creating antdform----------------->\n\nexport default function Antdform() {\n    const did = localStorage.getItem('DID');\n    let history = useHistory();\n    const [form] = Form.useForm();\n    const [isLoading, setIsloading] = useState('false');\n    const [images, setImages] = useState({});\n\n    const getOcrRecord = async () => {\n        try {\n            setIsloading(true);\n            const response = await sabhiApiInstance.get(`ocr/${did}`);\n            const { identityCardFrontData, identityCardBackData, profileImage, identityCardFrontImage, identityCardBackImage } = response.data.data[0];\n            setImages({ profileImage: profileImage, identityCardFrontImage: identityCardFrontImage, identityCardBackImage: identityCardBackImage });\n            form.setFieldsValue({\n                fullName: identityCardFrontData.nameEnglish,\n                fatherName: identityCardFrontData.fatherNameEnglish,\n                gender: identityCardFrontData.gender,\n                countryOfStay: identityCardFrontData.countryOfStay,\n                identityNumber: identityCardFrontData.identityNumber,\n                issueDate: identityCardFrontData.dateOfIssue,\n                birthDate: identityCardFrontData.dateOfBirth,\n                expireDate: identityCardFrontData.dateOfExpiry,\n                permanentAddress: identityCardBackData.permenantAddress,\n                temporaryAddress: identityCardBackData.presentAddress,\n            });\n            setIsloading(false);\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    useEffect(() => {\n        getOcrRecord();\n    }, []);\n\n\n    const createVerifiablePresentation = async (values) => {\n        try {\n            const response = await apiInstance.post('vp', values);\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    const onFinish = (values) => {\n        console.log(values);\n        setIsloading(true);\n        values.profileImage = images.profileImage;\n        values.did = did;\n        values.identityCardBackImage = images.identityCardBackImage;\n        values.identityCardFrontImage = images.identityCardFrontImage;\n        createVerifiablePresentation(values);\n        setIsloading(false);\n        history.push({\n            pathname: '/user_profile',\n        });\n    };\n\n    const onFinishFailed = (errorInfo) => {\n        console.log('Failed:', errorInfo);\n    };\n\n    // rendering antd form ---------------------->\n    return (\n            <Form\n                layout=\"horizontal\"\n                form={form}\n                name=\"basic\"\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n            >\n                <Form.Item label=\"Name\" required tooltip=\"This is a required field\" name=\"fullName\">\n                    <Input placeholder=\"input placeholder\" />\n                </Form.Item>\n                <Form.Item label=\"Father Name\" required tooltip=\"This is a required field\" name=\"fatherName\">\n                    <Input placeholder=\"input placeholder\" />\n                </Form.Item>\n                <Form.Item label=\"Gender\" required tooltip=\"This is a required field\" name=\"gender\">\n                    <Input placeholder=\"input placeholder\" />\n                </Form.Item>\n                <Form.Item label=\"Country of Stay\" required tooltip=\"This is a required field\" name=\"countryOfStay\">\n                    <Input placeholder=\"input placeholder\" />\n                </Form.Item>\n                <Form.Item label=\"Identity Number\" required tooltip=\"This is a required field\" name=\"identityNumber\">\n                    <Input placeholder=\"input placeholder\" />\n                </Form.Item>\n                <Form.Item label=\"Date of Issue\" required tooltip=\"This is a required field\" name=\"issueDate\">\n                    <Input placeholder=\"input placeholder\" />\n                </Form.Item>\n                <Form.Item label=\"Date of Birth\" required tooltip=\"This is a required field\" name=\"birthDate\">\n                    <Input placeholder=\"input placeholder\" />\n                </Form.Item>\n                <Form.Item label=\"Date of Expiry\" required tooltip=\"This is a required field\" name=\"expireDate\">\n                    <Input placeholder=\"input placeholder\" />\n                </Form.Item>\n                <Form.Item label=\"Permanent Address\" required tooltip=\"This is a required field\" name=\"permanentAddress\">\n                    <Input placeholder=\"input placeholder\" />\n                </Form.Item>\n                <Form.Item label=\"Temporary Address\" required tooltip=\"This is a required field\" name=\"temporaryAddress\">\n                    <Input placeholder=\"input placeholder\" />\n                </Form.Item>\n                <Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\">Submit</Button>\n                </Form.Item>\n\n\n            </Form>\n    );\n\n}","import React, { useEffect, useState } from 'react';\nimport { Form, Input, Col, Row, Image, Avatar, Spin, Space, message } from 'antd';\nimport { useHistory } from 'react-router-dom';\nimport { sabhiApiInstance } from \"../axios-instance\";\nimport { io } from \"socket.io-client\";\nimport Swal from 'sweetalert2';\n\nexport default function UserProfile() {\n    const did = localStorage.getItem('DID');\n    console.log(localStorage.getItem('DID'));\n    const [omniData, setOmniData] = useState(\"\");\n    const [form] = Form.useForm();\n    const [isLoading, setIsloading] = useState('false');\n    const [userData, setUserData] = useState(null);\n    const [images, setImages] = useState({});\n\n    useEffect(() => {\n        getData();\n    }, []);\n\n\n    let test = \"\"\n    let socket;\n    // socket\n    useEffect(() => {\n\n        const ENDPOINT = 'http://localhost:12345/';\n        socket = io(ENDPOINT);\n        console.log(socket);\n        socket.on('chat', data => {\n            console.log(data);\n        });\n\n        socket.on('displayOmniCheck', data => {\n            console.log(data);\n            test = data.message;\n            setOmniData(data.message);\n            handleswirlTwo();\n        });\n\n    }, []);\n\n    async function getData() {\n        try {\n            setIsloading(true);\n            const response = await sabhiApiInstance.get(`application/${did}`);\n            console.log(response.data.data[0]);\n            const { fullName, fatherName, profileImage, countryOfStay, gender, identityNumber, issueDate, birthDate, expireDate, permanentAddress, temporaryAddress } = response.data.data[0];\n            setImages({ profileImage: profileImage, });\n            form.setFieldsValue({\n                fullName: fullName.value,\n                fatherName: fatherName.value,\n                gender: gender.value,\n                countryOfStay: countryOfStay.value,\n                identityNumber: identityNumber.value,\n                issueDate: issueDate.value,\n                birthDate: birthDate.value,\n                expireDate: expireDate.value,\n                permanentAddress: permanentAddress.value,\n                temporaryAddress: temporaryAddress.value,\n            });\n            setIsloading(false);\n        } catch (error) {\n            message.error('something went wrong!', error);\n        }\n    }\n\n    function handleswirlTwo() {\n        const swalWithBootstrapButtons = Swal.mixin({\n            customClass: {\n                confirmButton: 'btn btn-success',\n                cancelButton: 'btn btn-danger'\n            },\n            buttonsStyling: false\n        });\n        swalWithBootstrapButtons.fire({\n            title: 'Please confirm following',\n            html: `${test}`,\n            allowOutsideClick: false,\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonText: 'Yes, it is me',\n            cancelButtonText: 'No,it is not me',\n            reverseButtons: true\n        }).then((result) => {\n            if (result.isConfirmed) {\n                console.log('i am confirmed !!! ');\n                socket.emit('omniResponse', { status: true, message: \"omni is accepted!\" });\n                swalWithBootstrapButtons.fire(\n                    'Confirmed!',\n                    'Your data has been confirmed',\n                    'success'\n                )\n            } else if (\n                /* Read more about handling dismissals below */\n                result.dismiss === Swal.DismissReason.cancel\n            ) {\n                console.log('i am rejected !!!');\n                socket.emit('omniResponse', { status: false, message: \"omni is rejected!\" });\n                swalWithBootstrapButtons.fire(\n                    'Cancelled',\n                    'Your data could not be confirmed :(',\n                    'error'\n                )\n            }\n        });\n    }\n\n\n\n    return (\n        <div>\n            <Space size=\"large\">\n                <Spin spinning={isLoading}>\n                    <Form\n                        style={{ marginTop: \"18px\" }}\n                        layout=\"vertical\"\n                        form={form}\n                        name=\"basic\"\n                    >\n                        <Row>\n                            <Col span={4}>\n                                <Avatar\n                                    style={{ marginTop: \"18px\" }}\n                                    src={<Image src={images.profileImage ?? 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png'} />}\n                                    size={140}\n                                />\n                            </Col>\n                            <Col span={20}>\n                                <Row gutter={16}>\n                                    <Col className=\"gutter-row\" span={2}>\n                                    </Col>\n                                    <Col className=\"gutter-row\" span={11}>\n                                        <Form.Item\n                                            label=\"Name\"\n                                            name=\"fullName\">\n                                            <Input size=\"small\" disabled />\n                                        </Form.Item>\n                                    </Col>\n                                    <Col className=\"gutter-row\" span={11}>\n                                        <Form.Item\n                                            label=\"Father Name\"\n                                            name=\"fatherName\">\n                                            <Input size=\"small\" disabled />\n                                        </Form.Item>\n                                    </Col>\n                                </Row>\n                                <Row gutter={16} offset={4}>\n                                    <Col className=\"gutter-row\" span={2}>\n                                    </Col>\n                                    <Col className=\"gutter-row\" span={11}>\n                                        <Form.Item\n                                            label=\"Gender\"\n                                            name=\"gender\">\n                                            <Input size=\"small\" disabled />\n                                        </Form.Item>\n                                    </Col>\n                                    <Col className=\"gutter-row\" span={11}>\n                                        <Form.Item\n                                            label=\"Country of Stay\"\n                                            name=\"countryOfStay\">\n                                            <Input size=\"small\" disabled />\n                                        </Form.Item>\n                                    </Col>\n                                    <Col className=\"gutter-row\" span={6}>\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Row gutter={22}>\n                                <Col className=\"gutter-row\" span={6}>\n                                    <Form.Item\n                                        label=\"Identity Number\"\n                                        name=\"identityNumber\">\n                                        <Input size=\"small\" disabled />\n                                    </Form.Item>\n                                </Col>\n                                <Col className=\"gutter-row\" span={6}>\n                                    <Form.Item\n                                        label=\"Date of Issue\"\n                                        name=\"issueDate\">\n                                        <Input size=\"small\" disabled />\n                                    </Form.Item>\n                                </Col>\n                                <Col className=\"gutter-row\" span={6}>\n                                    <Form.Item\n                                        label=\"Date of Birth\"\n                                        name=\"birthDate\">\n                                        <Input size=\"small\" disabled />\n                                    </Form.Item>\n                                </Col>\n                                <Col className=\"gutter-row\" span={6}>\n                                    <Form.Item\n                                        label=\"Date of Expiry\"\n                                        name=\"expireDate\">\n                                        <Input size=\"small\" disabled />\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n                            <Col span={24}>\n                                <Form.Item\n                                    label=\"Permanent Address\"\n                                    name=\"permanentAddress\">\n                                    <Input size=\"small\" disabled />\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"Temporary Address\"\n                                    name=\"temporaryAddress\">\n                                    <Input size=\"small\" disabled />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n                    <Row>\n                        Verified By: XYZ\n                    </Row>\n                </Spin>\n            </Space>\n        </div >\n    );\n}","export default __webpack_public_path__ + \"static/media/onboarding.80f4a645.png\";","import React, { useEffect, useState } from 'react';\nimport { Row, Col, Button, message } from 'antd';\nimport { useHistory } from 'react-router-dom';\nimport { UserAddOutlined } from '@ant-design/icons';\nimport OnBoardImage from '../images/onboarding.png';\nimport { apiInstance } from '../axios-instance';\nimport '../App.css';\n\nexport default function OnBoardScreen() {\n    let history = useHistory();\n    const style = { display: 'inline-flex', justifyContent: 'center', alignItems: 'center', width: '500px', height: '500px' };\n    const btnStyle = { position: 'absolute', top: '550px', background: '#4DDFBC', bordeRadius: '16px', 'borderColor': '#4DDFBC' };\n\n    const createIdentity = async () => {\n        try {\n            message.loading('creating identity...', 0.5)\n                .then(async () => {\n                    const response = await apiInstance.get('did');\n                    if (response) {\n                        localStorage.setItem('DID', response.data.did);\n                        console.log(localStorage.getItem('DID'));\n\n                        message.success('Identity created succesfully!')\n                            .then(() => message.loading('redirecting...', 1)\n                                .then(() => history.push('/ocr_front')));\n\n                    }\n                })\n        } catch (error) {\n            message.error(\"something went wrong please try again!\");\n        }\n    }\n\n    return (\n\n        <div class=\"container\" style={style}>\n            <img src={OnBoardImage} width=\"200px\" />\n            <Button type=\"primary\" shape=\"round\" style={btnStyle} size='large' onClick={createIdentity}>\n                Create Identity\n            </Button>\n        </div>\n    );\n}","export class Webcam {\n    constructor(webcamElement, canvasElement) {\n        this.webcamElement = webcamElement;\n        this.canvasElement = canvasElement;\n    }\n\n    adjustVideoSize(width, height) {\n        const aspectRatio = width / height;\n        if (width >= height) {\n            this.webcamElement.width = aspectRatio * this.webcamElement.height;\n        } else if (width < height) {\n            this.webcamElement.height = this.webcamElement.width / aspectRatio;\n        }\n    }\n\n    async setup() {\n        return new Promise((resolve, reject) => {\n            if (navigator.mediaDevices.getUserMedia !== undefined) {\n                navigator.mediaDevices.getUserMedia({ audio: false, video: { facingMode: 'environment' } })\n                    .then((mediaStream) => {\n                        if (\"srcObject\" in this.webcamElement) {\n                            this.webcamElement.srcObject = mediaStream;\n                            console.log('here');\n                        } else {\n                            // For older browsers withouth the srcObject.\n                            this.webcamElement.src = window.URL.createObjectURL(mediaStream);\n                        }\n                        this.webcamElement.onloadedmetadata = (e) => {\n                            this.webcamElement.play();\n                        };\n                    });\n            } else {\n                reject();\n            }\n        });\n    }\n\n    _drawImage() {\n        const imageWidth = this.webcamElement.videoWidth;\n        const imageHeight = this.webcamElement.videoHeight;\n\n        const context = this.canvasElement.getContext('2d');\n        this.canvasElement.width = imageWidth;\n        this.canvasElement.height = imageHeight;\n\n        context.drawImage(this.webcamElement, 0, 0, imageWidth, imageHeight);\n\n        return { imageHeight, imageWidth };\n    }\n\n    takeBlobPhoto() {\n        const { imageWidth, imageHeight } = this._drawImage();\n        return new Promise((resolve, reject) => {\n            this.canvasElement.toBlob((blob) => {\n                resolve({ blob, imageHeight, imageWidth });\n            });\n        });\n    }\n\n    takeBase64Photo({ type, quality } = { type: 'png', quality: 1 }) {\n        const { imageHeight, imageWidth } = this._drawImage();\n        const base64 = this.canvasElement.toDataURL('image/' + type, quality);\n        return { base64, imageHeight, imageWidth };\n    }\n}","import React, { Component } from 'react';\nimport { Webcam } from './webcam';\n// import axios from 'axios';\nimport { sabhiApiInstance } from '../axios-instance';\n// for class component only will change later\nimport { withRouter } from \"react-router-dom\";\nclass IdentityCardFrontScan extends Component {\n    constructor() {\n        super();\n        this.webcam = null;\n        this.state = {\n            capturedImage: null,\n            captured: false,\n\n            uploading: false\n        }\n    }\n\n\n\n    componentDidMount() {\n        // initialize the camera\n        this.canvasElement = document.createElement('canvas');\n        this.webcam = new Webcam(\n            document.getElementById('webcam'),\n            this.canvasElement\n        );\n        this.webcam.setup().catch(() => {\n            alert('Error getting access to your camera');\n        });\n    }\n\n    componentDidUpdate(prevProps) {\n        if (!this.props.offline && (prevProps.offline === true)) {\n            // if its online,\n            this.batchUploads();\n        }\n    }\n\n    render() {\n\n        const style = {};\n        if (this.state.captured) {\n            style.display = 'none'\n        }\n        const imageDisplay = this.state.capturedImage ?\n            <img src={this.state.capturedImage} alt=\"captured\" width=\"350\" />\n            :\n            <span />;\n\n        const buttons = this.state.captured ?\n            <div>\n                <button className=\"deleteButton\" onClick={this.discardImage} > Delete Photo </button>\n                <button className=\"captureButton\" onClick={this.uploadImage} > Upload Photo </button>\n            </div> :\n            <button className=\"captureButton\" onClick={this.captureImage} > Take Picture </button>\n\n        const uploading = this.state.uploading ?\n            <div><p> Uploading Image, please wait ... </p></div>\n            :\n            <span />\n\n        return (\n            <div>\n                <h1> Front</h1>\n                {uploading}\n                <video autoPlay playsInline muted id=\"webcam\" width=\"100%\" style={style} />\n                <br />\n\n                {\n                    this.state.captured && <div className=\"imageCanvas\">\n                        {imageDisplay}\n                    </div>\n                }\n\n                {buttons}\n            </div>\n        )\n    }\n\n    captureImage = async () => {\n        const capturedData = this.webcam.takeBase64Photo({ type: 'jpeg', quality: 0.8 });\n        console.log(capturedData.base64);\n        this.setState({\n            captured: true,\n            capturedImage: capturedData.base64\n        });\n    }\n\n    discardImage = () => {\n        this.setState({\n            captured: false,\n            capturedImage: null\n        })\n    }\n\n    uploadImage = () => {\n        if (this.props.offline) {\n            console.log(\"you're using in offline mode sha\");\n            // create a random string with a prefix\n            const prefix = 'cloudy_pwa_';\n            // create random string\n            const rs = Math.random().toString(36).substr(2, 5);\n            localStorage.setItem(`${prefix}${rs}`, this.state.capturedImage);\n            alert('Image saved locally, it will be uploaded to your Sabhi media library once internet connection is detected');\n            this.discardImage();\n            // save image to local storage\n        } else {\n            this.setState({ 'uploading': true });\n            sabhiApiInstance.post(\n                `ocr/cnic/front`,\n                {\n                    file: this.state.capturedImage,\n                    did: localStorage.getItem('DID'),\n                }\n            ).then(\n                (data) => this.checkUploadStatus(data)\n            )\n                .catch((error) => {\n                    alert('Sorry, we encountered an error uploading your image');\n                    this.setState({ 'uploading': false });\n                });\n        }\n    }\n\n    findLocalItems = (query) => {\n        var i, results = [];\n        for (i in localStorage) {\n            if (localStorage.hasOwnProperty(i)) {\n                if (i.match(query) || (!query && typeof i === 'string')) {\n                    const value = localStorage.getItem(i);\n                    results.push({ key: i, val: value });\n                }\n            }\n        }\n        return results;\n    }\n\n    checkUploadStatus = (data) => {\n        this.setState({ 'uploading': false });\n        if (data.status === 200) {\n            alert('Image Uploaded to Sabhi Media Library');\n            this.props.history.push('/ocr_back');\n            this.discardImage();\n        } else {\n            alert('Sorry, we encountered an error uploading your image');\n        }\n    }\n    batchUploads = () => {\n        // this is where all the images saved can be uploaded as batch uploads\n        const images = this.findLocalItems(/^cloudy_pwa_/);\n        let error = false;\n        if (images.length > 0) {\n            this.setState({ 'uploading': true });\n            for (let i = 0; i < images.length; i++) {\n                // upload\n                sabhiApiInstance.post(\n                    `ocr/cnic/front`,\n                    {\n                        file: images[i].val,\n                        did: localStorage.getItem('DID'),\n                    }\n                ).then((data) => this.checkUploadStatus(data)).catch((error) => {\n                    error = true;\n                })\n            }\n            this.setState({ 'uploading': false });\n            if (!error) {\n                alert(\"All saved images have been uploaded to your Sabhi Media Library\");\n            }\n        }\n    }\n}\nexport default IdentityCardFrontScan;\n","import React, { Component } from 'react';\nimport { Webcam } from './webcam';\n// import axios from 'axios';\nimport { sabhiApiInstance } from '../axios-instance';\n// import { useHistory } from 'react-router-dom';\n\n\nclass IdentityCardBackScan extends Component {\n\n\n    constructor() {\n        super();\n        this.webcam = null;\n        this.state = {\n            capturedImage: null,\n            captured: false,\n\n            uploading: false\n        }\n    }\n\n\n\n    componentDidMount() {\n        // initialize the camera\n        this.canvasElement = document.createElement('canvas');\n        this.webcam = new Webcam(\n            document.getElementById('webcam'),\n            this.canvasElement\n        );\n        this.webcam.setup().catch(() => {\n            alert('Error getting access to your camera');\n        });\n    }\n\n    componentDidUpdate(prevProps) {\n        if (!this.props.offline && (prevProps.offline === true)) {\n            // if its online,\n            this.batchUploads();\n        }\n    }\n\n    render() {\n        // let history = useHistory();\n        const style = {};\n        if (this.state.captured) {\n            style.display = 'none'\n        }\n        const imageDisplay = this.state.capturedImage ?\n            <img src={this.state.capturedImage} alt=\"captured\" width=\"350\" />\n            :\n            <span />;\n\n        const buttons = this.state.captured ?\n            <div>\n                <button className=\"deleteButton\" onClick={this.discardImage} > Delete Photo </button>\n                <button className=\"captureButton\" onClick={this.uploadImage} > Upload Photo </button>\n            </div> :\n            <button className=\"captureButton\" onClick={this.captureImage} > Take Picture </button>\n\n        const uploading = this.state.uploading ?\n            <div><p> Uploading Image, please wait ... </p></div>\n            :\n            <span />\n\n        return (\n            <div>\n                <h1> Back </h1>\n                {uploading}\n                <video autoPlay playsInline muted id=\"webcam\" width=\"100%\" style={style} />\n                <br />\n\n                {\n                    this.state.captured && <div className=\"imageCanvas\">\n                        {imageDisplay}\n                    </div>\n                }\n\n                {buttons}\n            </div>\n        )\n    }\n\n    captureImage = async () => {\n        const capturedData = this.webcam.takeBase64Photo({ type: 'jpeg', quality: 0.8 });\n        console.log(capturedData.base64);\n        this.setState({\n            captured: true,\n            capturedImage: capturedData.base64\n        });\n    }\n\n    discardImage = () => {\n        this.setState({\n            captured: false,\n            capturedImage: null\n        })\n    }\n\n    uploadImage = () => {\n        if (this.props.offline) {\n            console.log(\"you're using in offline mode sha\");\n            // create a random string with a prefix\n            const prefix = 'cloudy_pwa_';\n            // create random string\n            const rs = Math.random().toString(36).substr(2, 5);\n            localStorage.setItem(`${prefix}${rs}`, this.state.capturedImage);\n            alert('Image saved locally, it will be uploaded to your Sabhi media library once internet connection is detected');\n            this.discardImage();\n            // save image to local storage\n        } else {\n            this.setState({ 'uploading': true });\n            sabhiApiInstance.post(\n                `ocr/cnic/front`,\n                {\n                    file: this.state.capturedImage,\n                    did: localStorage.getItem('DID'),\n                }\n            ).then(\n                (data) => this.checkUploadStatus(data)\n            )\n                .catch((error) => {\n                    alert('Sorry, we encountered an error uploading your image');\n                    this.setState({ 'uploading': false });\n                });\n        }\n    }\n\n    findLocalItems = (query) => {\n        var i, results = [];\n        for (i in localStorage) {\n            if (localStorage.hasOwnProperty(i)) {\n                if (i.match(query) || (!query && typeof i === 'string')) {\n                    const value = localStorage.getItem(i);\n                    results.push({ key: i, val: value });\n                }\n            }\n        }\n        return results;\n    }\n\n    checkUploadStatus = (data) => {\n        this.setState({ 'uploading': false });\n        if (data.status === 200) {\n            alert('Image Uploaded to Sabhi Media Library');\n            this.discardImage();\n        } else {\n            alert('Sorry, we encountered an error uploading your image');\n        }\n    }\n    batchUploads = () => {\n        // this is where all the images saved can be uploaded as batch uploads\n        const images = this.findLocalItems(/^cloudy_pwa_/);\n        let error = false;\n        if (images.length > 0) {\n            this.setState({ 'uploading': true });\n            for (let i = 0; i < images.length; i++) {\n                // upload\n                sabhiApiInstance.post(\n                    `ocr/cnic/front`,\n                    {\n                        file: images[i].val,\n                        did: localStorage.getItem('DID'),\n                    }\n                ).then((data) => this.checkUploadStatus(data)).catch((error) => {\n                    error = true;\n                })\n            }\n            this.setState({ 'uploading': false });\n            if (!error) {\n                alert(\"All saved images have been uploaded to your Sabhi Media Library\");\n            }\n        }\n    }\n}\nexport default IdentityCardBackScan;\n","// importing bootstrap elements------->\nimport {\n  Container,\n  Card,\n  Row\n} from 'react-bootstrap';\n\n// importing components and router components------------>\nimport { Route, Switch } from 'react-router-dom';\n// import FormSDR from './components/SDR.generator.form';\nimport SplashScreen from './components/SplashScreen';\nimport antsdrform from './components/Antd-form';\nimport UserProfile from './components/UserProfile';\nimport OnBoardScreen from './components/OnBoardScreen';\nimport IdentityCardFrontScan from './components/IdentityCardFrontScan';\nimport IdentityCardBackScan from './components/IdentityCardBackScan';\n// importing css files----------------->\nimport './App.css';\n\n// importing image files---------------->\nimport sabhilogo from './images/dark.svg';\n\n\n// rendering view------------------------>\nexport default function App() {\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path='/' component={SplashScreen} exact />\n        <Route path='/onboard' component={OnBoardScreen} />\n        <Route path='/ocr_front' component={IdentityCardFrontScan} />\n        <Route path='/ocr_back' component={IdentityCardBackScan} />\n        <Route path='/form_sdr' component={antsdrform} />\n        <Route path='/user_profile' component={UserProfile} />\n      </Switch>\n    </div>\n  );\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'antd/dist/antd.css';\nimport Swal from 'sweetalert2/dist/sweetalert2.js'\nimport 'sweetalert2/src/sweetalert2.scss'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n","const axios = require('axios');\n\nconst apiInstance = axios.create({\n    // baseURL: 'https://sabhi-sdr-test-node.herokuapp.com/',\n    // baseURL: 'http://localhost:2011/',\n    baseURL: 'https://client-server-veramo.herokuapp.com/',\n});\n\nconst sabhiApiInstance = axios.create({\n    // baseURL: 'http://localhost:12345/',\n    baseURL: 'https://sabhi-task.com/',\n});\n\nmodule.exports = {\n    apiInstance,\n    sabhiApiInstance\n}"],"sourceRoot":""}