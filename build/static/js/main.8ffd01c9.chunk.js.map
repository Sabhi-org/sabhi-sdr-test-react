{"version":3,"sources":["components/ParseSDR.js","components/ImageUploader.js","components/Antd-form.js","components/UserProfile.js","images/dark.svg","App.js","index.js","axios-instance.js"],"names":["ParseSDR","useState","myuri","setmyuri","useEffect","fetchProducts","TextArea","Input","a","axios","get","response","console","log","data","uri","history","useHistory","value","placeholder","autoSize","minRows","maxRows","style","marginTop","span","offset","type","onClick","push","pathname","shape","size","PictureUploader","Step","Steps","Dragger","Upload","Anchor","Link","setIsDisable","setIdentityCardFrontUrl","identity","setIdentity","isLoading","setIsloading","getIdentity","apiInstance","did","localStorage","setItem","getItem","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","handleUploadIdenitytCardFront","base64Img","sabhiApiInstance","post","cnic","message","then","handleUploadIdenitytCardBack","put","handleProfileImageUpload","profileImage","identityCardBackImageUploader","name","multiple","listType","customRequest","onSuccess","onError","onProgress","status","setCurrent","current","accept","beforeUpload","isJpgOrPng","onChange","fileList","success","identityCardFrontImageUploader","res","profileImageUploader","steps","title","content","className","IdcardOutlined","PictureOutlined","spinning","layout","htmlFor","display","fontSize","fontWeight","paddingBottom","disabled","id","orientation","map","item","Antdform","Form","useForm","form","images","setImages","getOcrRecord","identityCardFrontData","identityCardBackData","identityCardFrontImage","identityCardBackImage","setFieldsValue","fullName","nameEnglish","fatherName","fatherNameEnglish","gender","countryOfStay","identityNumber","issueDate","dateOfIssue","birthDate","dateOfBirth","expireDate","dateOfExpiry","permanentAddress","permenantAddress","temporaryAddress","presentAddress","createVerifiablePresentation","values","onFinish","onFinishFailed","errorInfo","src","gutter","Item","label","rules","required","htmlType","block","FileDoneOutlined","UserProfile","setOmniData","getData","socket","test","io","on","swalWithBootstrapButtons","Swal","mixin","customClass","confirmButton","cancelButton","buttonsStyling","fire","html","allowOutsideClick","icon","showCancelButton","confirmButtonText","cancelButtonText","reverseButtons","isConfirmed","emit","dismiss","DismissReason","cancel","handleswirlTwo","App","Container","Row","Card","sabhilogo","Body","path","component","exact","fileUploader","antsdrform","ReactDOM","render","document","getElementById","require","create","baseURL","module","exports"],"mappings":"6VAae,SAASA,IAAW,MAEPC,mBAAS,KAFF,mBAE1BC,EAF0B,KAEnBC,EAFmB,KAK/BC,qBAAU,WACNC,MACD,IAP4B,IASvBC,EAAaC,IAAbD,SAEFD,EAAa,uCAAG,4BAAAG,EAAA,+EAISC,IAAMC,IAAI,mCAJnB,OAIRC,EAJQ,OAKdC,QAAQC,IAAIF,EAASG,KAAKA,KAAKC,KAC/BZ,EAASQ,EAASG,KAAKA,KAAKC,KAC5BH,QAAQC,IAAIX,GAPE,gDAUdU,QAAQC,IAAR,MAVc,yDAAH,qDAiBbG,EAAUC,cAUhB,OACI,eAAC,IAAD,WAEI,cAACX,EAAD,CACIY,MAAOhB,EAEPiB,YAAY,uBACZC,SAAU,CAAEC,QAAS,EAAGC,QAAS,IACjCC,MAAO,CAAEC,UAAW,MAExB,cAAC,IAAD,UACI,cAAC,IAAD,CAAKC,KAAM,EAAGC,OAAQ,GAAtB,SACI,cAAC,IAAD,CAAQC,KAAK,UAAUC,QArBvC,WACIZ,EAAQa,KAAK,CACTC,SAAU,gBAmB2CC,MAAM,QAAQC,KAAK,QAAQT,MAAO,CAAEC,UAAW,IAA5F,8B,4FCvDL,SAASS,IACpB,IAAIjB,EAAUC,cACNiB,EAASC,IAATD,KACAE,EAAYC,IAAZD,QAH8B,GAIrBE,IAATC,KAE0BtC,oBAAS,IANL,mBAMpBuC,GANoB,aAOkBvC,mBAAS,IAP3B,mBAOTwC,GAPS,aAQgBxC,mBAAS,IARzB,gCASNA,mBAAS,KATH,mBAS/ByC,EAT+B,KASrBC,EATqB,OAUJ1C,oBAAS,GAVL,mBAU/B2C,EAV+B,KAUpBC,EAVoB,KAoBhCC,EAAW,uCAAG,4BAAAtC,EAAA,sEAEZqC,GAAa,GAFD,SAIWE,cAAYrC,IAAI,OAJ3B,OAINC,EAJM,OAKZC,QAAQC,IAAIF,GACRA,GAAUgC,EAAYhC,EAASG,KAAKkC,KACxCpC,QAAQC,IAAI6B,GAEZO,aAAaC,QAAQ,MAAOvC,EAASG,KAAKkC,KAC1CpC,QAAQC,IAAIoC,aAAaE,QAAQ,QACjCN,GAAa,GAXD,kDAaZjC,QAAQC,IAAR,MAbY,0DAAH,qDA8BjB,SAASuC,EAAUC,GACf,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzB,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,cAAcN,GACrBI,EAAOG,OAAS,kBAAML,EAAQE,EAAOI,SACrCJ,EAAOK,QAAU,SAAAC,GAAK,OAAIP,EAAOO,OAIzC,SAASC,EAA8BX,GACnC,OAAO,IAAIC,QAAJ,uCAAY,WAAOC,EAASC,GAAhB,iBAAAhD,EAAA,+EAEa4C,EAAUC,GAFvB,cAELY,EAFK,gBAGYC,mBAAiBC,KAAK,iBAAkB,CAC3DnB,IAAKN,EACL0B,KAAMH,IALC,OAGLtD,EAHK,OAOXC,QAAQC,IAAIF,GACRA,GAAU4C,EAAQ5C,EAASG,MARpB,kDAUP,KAAMH,SACN0D,IAAQN,MAAM,KAAMpD,SAASG,KAAKiD,MAAMM,SACnCC,MAAK,kBAAMd,EAAO,EAAD,OAEtBA,EAAO,EAAD,IAdC,0DAAZ,yDAoBX,SAASe,EAA6BlB,GAClC,OAAO,IAAIC,QAAJ,uCAAY,WAAOC,EAASC,GAAhB,iBAAAhD,EAAA,+EAEa4C,EAAUC,GAFvB,cAELY,EAFK,gBAGYC,mBAAiBM,IAAI,gBAAiB,CACzDxB,IAAKN,EACL0B,KAAMH,IALC,QAGLtD,EAHK,SAOG4C,EAAQ5C,EAASG,MAPpB,kDASP,KAAMH,SACN0D,IAAQN,MAAM,KAAMpD,SAASG,KAAKiD,MAAMM,SACnCC,MAAK,kBAAMd,EAAO,EAAD,OAEtBA,EAAO,EAAD,IAbC,0DAAZ,yDAmBX,SAASiB,EAAyBpB,GAC9B,OAAO,IAAIC,QAAJ,uCAAY,WAAOC,EAASC,GAAhB,iBAAAhD,EAAA,+EAEa4C,EAAUC,GAFvB,cAELY,EAFK,gBAGYC,mBAAiBM,IAAI,cAAe,CACvDxB,IAAKN,EACLgC,aAAcT,IALP,QAGLtD,EAHK,SAOG4C,EAAQ5C,EAASG,MAPpB,kDASP,KAAMH,SACN0D,IAAQN,MAAM,KAAMpD,SAASG,KAAKiD,MAAMM,SACnCC,MAAK,kBAAMd,EAAO,EAAD,OAEtBA,EAAO,EAAD,IAbC,0DAAZ,yDAjEXpD,qBAAU,WAEN0C,MAED,IAgFH,IAAM6B,EAAgC,CAClCC,KAAM,OACNC,UAAU,EACVC,SAAU,UACVC,cAAc,WAAD,4BAAE,iCAAAvE,EAAA,6DAAS6C,EAAT,EAASA,KAAM2B,EAAf,EAAeA,UAAWC,EAA1B,EAA0BA,QAA1B,EAAmCC,WAAnC,kBAEWX,EAA6BlB,GAFxC,cAGC8B,SACJH,EAAU,MACVI,EAAWC,EAAU,IALlB,gDAQPzE,QAAQC,IAAR,KAAmB,eACnBoE,EAAQ,EAAD,IATA,yDAAF,mDAAC,GAYdK,OAAQ,2BACRC,aAAc,SAAClC,GACX,IAAMmC,EAA2B,eAAdnC,EAAK1B,MAAuC,cAAd0B,EAAK1B,MAAsC,cAAd0B,EAAK1B,MAAsC,cAAd0B,EAAK1B,KAShH,OARK6D,GACDnB,IAAQN,MAAM,8CAOXyB,GAEXC,SA7BkC,YA6BJ,IAAnBpC,EAAkB,EAAlBA,KAAMqC,EAAY,EAAZA,SACLP,EAAW9B,EAAX8B,OACRvE,QAAQC,IAAIsE,GACG,cAAXA,GACAvE,QAAQC,IAAIwC,EAAMqC,GAEP,SAAXP,EACAd,IAAQsB,QAAR,UAAmBtC,EAAKuB,KAAxB,iCACkB,UAAXO,GACPd,IAAQN,MAAR,UAAiBV,EAAKuB,KAAtB,2BAKNgB,EAAiC,CACnChB,KAAM,OACNC,UAAU,EACVC,SAAU,UACVC,cAAc,WAAD,4BAAE,mCAAAvE,EAAA,6DAAS6C,EAAT,EAASA,KAAM2B,EAAf,EAAeA,UAAWC,EAA1B,EAA0BA,QAA1B,SAGPzC,GAAa,GAHN,SAIWwB,EAA8BX,GAJzC,OAIDwC,EAJC,OAKPpD,EAAwBoD,EAAI/E,KAAKsD,MAC7ByB,EAAIV,SACJH,EAAU,MACVI,EAAWC,EAAU,IARlB,kDAWPzE,QAAQC,IAAI,sBACZD,QAAQC,IAAR,MACAoE,EAAQ,EAAD,IAbA,0DAAF,mDAAC,GAgBdK,OAAQ,2BACRC,aAAc,SAAClC,GACX,IAAMmC,EAA2B,eAAdnC,EAAK1B,MAAuC,cAAd0B,EAAK1B,MAAsC,cAAd0B,EAAK1B,MAAsC,cAAd0B,EAAK1B,KAShH,OARK6D,GACDnB,IAAQN,MAAM,qCAOXyB,GAEXC,SAjCmC,YAiCL,IAAnBpC,EAAkB,EAAlBA,KAAMqC,EAAY,EAAZA,SAILP,EAAW9B,EAAX8B,OACRvE,QAAQC,IAAIsE,GACG,cAAXA,GACAvE,QAAQC,IAAIwC,EAAMqC,GAEP,SAAXP,EACAd,IAAQsB,QAAR,UAAmBtC,EAAKuB,KAAxB,iCACkB,UAAXO,GACPd,IAAQN,MAAR,UAAiBV,EAAKuB,KAAtB,2BAMNkB,EAAuB,CACzBlB,KAAM,OACNC,UAAU,EACVC,SAAU,UACVC,cAAc,WAAD,4BAAE,mCAAAvE,EAAA,6DAAS6C,EAAT,EAASA,KAAM2B,EAAf,EAAeA,UAAWC,EAA1B,EAA0BA,QAA1B,SAEPzC,GAAa,GAFN,SAGWiC,EAAyBpB,GAHpC,OAGDwC,EAHC,OAIPpD,EAAwBoD,EAAI/E,KAAKsD,MAC7ByB,EAAIV,SACJH,EAAU,MACVhE,EAAQa,KAAK,CACTC,SAAU,eARX,kDAYPlB,QAAQC,IAAI,sBACZoE,EAAQ,EAAD,IAbA,0DAAF,mDAAC,GAgBdK,OAAQ,2BACRC,aAAc,SAAClC,GACX,IAAMmC,EAA2B,eAAdnC,EAAK1B,MAAuC,cAAd0B,EAAK1B,MAAsC,cAAd0B,EAAK1B,MAAsC,cAAd0B,EAAK1B,KAShH,OARK6D,GACDnB,IAAQN,MAAM,qCAOXyB,GAEXC,SAjCyB,YAiCK,IAAnBpC,EAAkB,EAAlBA,KAAMqC,EAAY,EAAZA,SACLP,EAAW9B,EAAX8B,OACRvE,QAAQC,IAAIsE,GACG,cAAXA,GACAvE,QAAQC,IAAIwC,EAAMqC,GAEP,SAAXP,EACAd,IAAQsB,QAAR,UAAmBtC,EAAKuB,KAAxB,iCACkB,UAAXO,GACPd,IAAQN,MAAR,UAAiBV,EAAKuB,KAAtB,2BAKNmB,EAAQ,CACV,CACIC,MAAO,sBACPC,QAAS,eAAC7D,EAAD,2BAAawD,GAAb,cACL,mBAAGM,UAAU,uBAAb,SACI,cAACC,EAAA,EAAD,MAEJ,mBAAGD,UAAU,kBAAb,iFACA,mBAAGA,UAAU,kBAAb,qGAKR,CACIF,MAAO,qBACPC,QAAS,eAAC7D,EAAD,2BAAauC,GAAb,cACL,mBAAGuB,UAAU,uBAAb,SACI,cAACC,EAAA,EAAD,MAEJ,mBAAGD,UAAU,kBAAb,gFACA,mBAAGA,UAAU,kBAAb,oGAKR,CACIF,MAAO,kBACPC,QAAS,eAAC7D,EAAD,2BAAa0D,GAAb,cACL,mBAAGI,UAAU,uBAAb,SACI,cAACE,EAAA,EAAD,MAEJ,mBAAGF,UAAU,kBAAb,oEACA,mBAAGA,UAAU,kBAAb,qGArS0B,EA4SRjG,mBAAS,GA5SD,mBA4S/BoF,EA5S+B,KA4StBD,EA5SsB,KAyTtC,OACI,mCACI,cAAC,IAAD,CAAMiB,SAAUzD,EAAhB,SACI,eAAC,IAAD,CACI0D,OAAO,WACP1B,KAAK,QAFT,UAII,cAAC,IAAD,UACI,cAAC,IAAD,CAAKnD,KAAM,GAAX,SACI,wBAAO8E,QAAQ,gBAAgBhF,MAtTpC,CACfiF,QAAS,QACThF,UAAW,OACXiF,SAAU,OACVC,WAAY,MACZC,cAAe,QAiTK,qBAEI,cAAC,IAAD,CAAO3E,KAAK,QAAQ4E,UAAQ,EAAC1F,MAAK,OAAEwB,QAAF,IAAEA,IAAY,GAAImE,GAAG,yBAInE,cAAC,IAAD,CAASC,YAAY,SACrB,cAAC,IAAD,CAAOzB,QAASA,EAAhB,SACKU,EAAMgB,KAAI,SAAAC,GAAI,OACX,cAAC9E,EAAD,CAAuB8D,MAAOgB,EAAKhB,OAAxBgB,EAAKhB,YAGxB,qBAAKE,UAAU,gBAAf,SAAgCH,EAAMV,GAASY,iB,wCC7UpD,SAASgB,IAAY,IAAD,EACzBjE,EAAMC,aAAaE,QAAQ,OAC7BnC,EAAUC,cAFiB,EAGhBiG,IAAKC,UAAbC,EAHwB,sBAIGnH,mBAAS,SAJZ,mBAIxB2C,EAJwB,KAIbC,EAJa,OAKH5C,mBAAS,IALN,mBAKxBoH,EALwB,KAKhBC,EALgB,KAOzBC,EAAY,uCAAG,wCAAA/G,EAAA,sEAEbqC,GAAa,GAFA,SAGUqB,mBAAiBxD,IAAjB,cAA4BsC,IAHtC,OAGPrC,EAHO,SAIwGA,EAASG,KAAKA,KAAK,GAAhI0G,EAJK,EAILA,sBAAuBC,EAJlB,EAIkBA,qBAAsB/C,EAJxC,EAIwCA,aAAcgD,EAJtD,EAIsDA,uBAAwBC,EAJ9E,EAI8EA,sBAC3FL,EAAU,CAAE5C,aAAcA,EAAcgD,uBAAwBA,EAAwBC,sBAAuBA,IAC/GP,EAAKQ,eAAe,CAChBC,SAAUL,EAAsBM,YAChCC,WAAYP,EAAsBQ,kBAClCC,OAAQT,EAAsBS,OAC9BC,cAAeV,EAAsBU,cACrCC,eAAgBX,EAAsBW,eACtCC,UAAWZ,EAAsBa,YACjCC,UAAWd,EAAsBe,YACjCC,WAAYhB,EAAsBiB,aAClCC,iBAAkBjB,EAAqBkB,iBACvCC,iBAAkBnB,EAAqBoB,iBAE3ChG,GAAa,GAlBA,kDAoBbjC,QAAQC,IAAR,MApBa,0DAAH,qDAwBlBT,qBAAU,WACNmH,MACD,IAGH,IAAMuB,EAA4B,uCAAG,WAAOC,GAAP,SAAAvI,EAAA,+EAENuC,cAAYoB,KAAK,KAAM4E,GAFjB,6DAI7BnI,QAAQmD,MAAR,MAJ6B,wDAAH,sDA0BlC,OACI,8BACI,cAAC,IAAD,CAAO/B,KAAK,QAAZ,SACI,cAAC,IAAD,CAAMqE,SAAUzD,EAAhB,SACI,eAAC,IAAD,CACIrB,MAAO,CAAEC,UAAW,QACpB8E,OAAO,WACPc,KAAMA,EACNxC,KAAK,QACLoE,SA3BH,SAACD,GACdlG,GAAa,GACbkG,EAAOrE,aAAe2C,EAAO3C,aAC7BqE,EAAO/F,IAAMA,EACb+F,EAAOpB,sBAAwBN,EAAOM,sBACtCoB,EAAOrB,uBAAyBL,EAAOK,uBACvCoB,EAA6BC,GAC7BlG,GAAa,GACb7B,EAAQa,KAAK,CACTC,SAAU,mBAmBEmH,eAfG,SAACC,GACpBtI,QAAQC,IAAI,UAAWqI,IAQX,UAQI,eAAC,IAAD,WACI,cAAC,IAAD,CAAKzH,KAAM,EAAX,SACI,cAAC,IAAD,CACIF,MAAO,CAAEC,UAAW,QACpB2H,IAAK,cAAC,IAAD,CAAOA,IAAG,UAAE9B,EAAO3C,oBAAT,QAAyB,qEACxC1C,KAAM,QAGd,eAAC,IAAD,CAAKP,KAAM,GAAX,UACI,eAAC,IAAD,CAAK2H,OAAQ,GAAb,UACI,cAAC,IAAD,CAAKlD,UAAU,aAAazE,KAAM,IAElC,cAAC,IAAD,CAAKyE,UAAU,aAAazE,KAAM,GAAlC,SACI,cAAC,IAAK4H,KAAN,CACIC,MAAM,OACN1E,KAAK,WACL2E,MAAO,CAAC,CAAEC,UAAU,EAAMnF,QAAS,+BAHvC,SAII,cAAC,IAAD,CAAOrC,KAAK,cAGpB,cAAC,IAAD,CAAKkE,UAAU,aAAazE,KAAM,GAAlC,SACI,cAAC,IAAK4H,KAAN,CACIC,MAAM,cACN1E,KAAK,aACL2E,MAAO,CAAC,CAAEC,UAAU,EAAMnF,QAAS,6BAHvC,SAII,cAAC,IAAD,CAAOrC,KAAK,iBAIxB,eAAC,IAAD,CAAKoH,OAAQ,GAAI1H,OAAQ,EAAzB,UACI,cAAC,IAAD,CAAKwE,UAAU,aAAazE,KAAM,IAElC,cAAC,IAAD,CAAKyE,UAAU,aAAazE,KAAM,GAAlC,SACI,cAAC,IAAK4H,KAAN,CACIC,MAAM,SACN1E,KAAK,SACL2E,MAAO,CAAC,CAAEC,UAAU,EAAMnF,QAAS,wBAHvC,SAII,cAAC,IAAD,CAAOrC,KAAK,cAGpB,cAAC,IAAD,CAAKkE,UAAU,aAAazE,KAAM,GAAlC,SACI,cAAC,IAAK4H,KAAN,CACIC,MAAM,kBACN1E,KAAK,gBACL2E,MAAO,CAAC,CAAEC,UAAU,EAAMnF,QAAS,qCAHvC,SAII,cAAC,IAAD,CAAOrC,KAAK,cAGpB,cAAC,IAAD,CAAKkE,UAAU,aAAazE,KAAM,aAK9C,eAAC,IAAD,WACI,eAAC,IAAD,CAAK2H,OAAQ,GAAb,UACI,cAAC,IAAD,CAAKlD,UAAU,aAAazE,KAAM,EAAlC,SACI,cAAC,IAAK4H,KAAN,CACIC,MAAM,kBACN1E,KAAK,iBACL2E,MAAO,CAAC,CAAEC,UAAU,EAAMnF,QAAS,8BAHvC,SAII,cAAC,IAAD,CAAOrC,KAAK,cAGpB,cAAC,IAAD,CAAKkE,UAAU,aAAazE,KAAM,EAAlC,SACI,cAAC,IAAK4H,KAAN,CACIC,MAAM,gBACN1E,KAAK,YACL2E,MAAO,CAAC,CAAEC,UAAU,EAAMnF,QAAS,wBAHvC,SAII,cAAC,IAAD,CAAOrC,KAAK,cAGpB,cAAC,IAAD,CAAKkE,UAAU,aAAazE,KAAM,EAAlC,SACI,cAAC,IAAK4H,KAAN,CACIC,MAAM,gBACN1E,KAAK,YACL2E,MAAO,CAAC,CAAEC,UAAU,EAAMnF,QAAS,wBAHvC,SAII,cAAC,IAAD,CAAOrC,KAAK,cAGpB,cAAC,IAAD,CAAKkE,UAAU,aAAazE,KAAM,EAAlC,SACI,cAAC,IAAK4H,KAAN,CACIC,MAAM,iBACN1E,KAAK,aACL2E,MAAO,CAAC,CAAEC,UAAU,EAAMnF,QAAS,sBAHvC,SAII,cAAC,IAAD,CAAOrC,KAAK,iBAIxB,eAAC,IAAD,CAAKP,KAAM,GAAX,UACI,cAAC,IAAK4H,KAAN,CACIC,MAAM,oBACN1E,KAAK,mBACL2E,MAAO,CAAC,CAAEC,UAAU,EAAMnF,QAAS,mCAHvC,SAII,cAAC,IAAD,CAAOrC,KAAK,YAEhB,cAAC,IAAKqH,KAAN,CACIC,MAAM,oBACN1E,KAAK,mBACL2E,MAAO,CAAC,CAAEC,UAAU,EAAMnF,QAAS,mCAHvC,SAII,cAAC,IAAD,CAAOrC,KAAK,kBAIxB,cAAC,IAAD,UACI,cAAC,IAAD,CAAKP,KAAM,EAAGC,OAAQ,GAAtB,SACI,cAAC,IAAK2H,KAAN,UACI,eAAC,IAAD,CAAQ1H,KAAK,UAAU8H,SAAS,SAAS1H,MAAM,QAAQC,KAAK,QAAQ0H,OAAK,EAAzE,UACI,cAACC,EAAA,EAAD,IADJ,2B,+BCtLrB,SAASC,IAAe,IAAD,EAC5B5G,EAAMC,aAAaE,QAAQ,OACjCvC,QAAQC,IAAIoC,aAAaE,QAAQ,QAFC,MAGFlD,mBAAS,IAHP,mBAGjB4J,GAHiB,aAInB3C,IAAKC,UAAbC,EAJ2B,sBAKAnH,mBAAS,SALT,mBAK3B2C,EAL2B,KAKhBC,EALgB,OAMF5C,mBAAS,MANP,gCAONA,mBAAS,KAPH,mBAO3BoH,EAP2B,KAOnBC,EAPmB,KASlClH,qBAAU,YATwB,mCAU9B0J,KACD,IAGH,IACIC,EADAC,EAAO,GAduB,4CAmClC,oDAAAxJ,EAAA,sEAEQqC,GAAa,GAFrB,SAG+BqB,mBAAiBxD,IAAjB,sBAAoCsC,IAHnE,OAGcrC,EAHd,OAIQC,QAAQC,IAAIF,EAASG,KAAKA,KAAK,IAJvC,EAKoKH,EAASG,KAAKA,KAAK,GAAvK+G,EALhB,EAKgBA,SAAUE,EAL1B,EAK0BA,WAAYrD,EALtC,EAKsCA,aAAcwD,EALpD,EAKoDA,cAAeD,EALnE,EAKmEA,OAAQE,EAL3E,EAK2EA,eAAgBC,EAL3F,EAK2FA,UAAWE,EALtG,EAKsGA,UAAWE,EALjH,EAKiHA,WAAYE,EAL7H,EAK6HA,iBAAkBE,EAL/I,EAK+IA,iBACvItB,EAAU,CAAE5C,aAAcA,IAC1B0C,EAAKQ,eAAe,CAChBC,SAAUA,EAAS3G,MACnB6G,WAAYA,EAAW7G,MACvB+G,OAAQA,EAAO/G,MACfgH,cAAeA,EAAchH,MAC7BiH,eAAgBA,EAAejH,MAC/BkH,UAAWA,EAAUlH,MACrBoH,UAAWA,EAAUpH,MACrBsH,WAAYA,EAAWtH,MACvBwH,iBAAkBA,EAAiBxH,MACnC0H,iBAAkBA,EAAiB1H,QAEvC2B,GAAa,GAnBrB,kDAqBQwB,IAAQN,MAAM,wBAAd,MArBR,2DAnCkC,sBAuGlC,OAtFA3D,qBAAU,WAGN2J,EAASE,aADQ,2BAEjBrJ,QAAQC,IAAIkJ,GACZA,EAAOG,GAAG,QAAQ,SAAApJ,GACdF,QAAQC,IAAIC,MAGhBiJ,EAAOG,GAAG,oBAAoB,SAAApJ,GAC1BF,QAAQC,IAAIC,GACZkJ,EAAOlJ,EAAKuD,QACZwF,EAAY/I,EAAKuD,SA+BzB,WACI,IAAM8F,EAA2BC,IAAKC,MAAM,CACxCC,YAAa,CACTC,cAAe,kBACfC,aAAc,kBAElBC,gBAAgB,IAEpBN,EAAyBO,KAAK,CAC1B1E,MAAO,2BACP2E,KAAK,GAAD,OAAKX,GACTY,mBAAmB,EACnBC,KAAM,UACNC,kBAAkB,EAClBC,kBAAmB,gBACnBC,iBAAkB,kBAClBC,gBAAgB,IACjB3G,MAAK,SAACT,GACDA,EAAOqH,aACPtK,QAAQC,IAAI,uBACZkJ,EAAOoB,KAAK,eAAgB,CAAEhG,QAAQ,EAAMd,QAAS,sBACrD8F,EAAyBO,KACrB,aACA,+BACA,YAIJ7G,EAAOuH,UAAYhB,IAAKiB,cAAcC,SAEtC1K,QAAQC,IAAI,qBACZkJ,EAAOoB,KAAK,eAAgB,CAAEhG,QAAQ,EAAOd,QAAS,sBACtD8F,EAAyBO,KACrB,YACA,sCACA,aAjERa,QAGL,IAuEC,8BACI,cAAC,IAAD,CAAOvJ,KAAK,QAAZ,SACI,eAAC,IAAD,CAAMqE,SAAUzD,EAAhB,UACI,eAAC,IAAD,CACIrB,MAAO,CAAEC,UAAW,QACpB8E,OAAO,WACPc,KAAMA,EACNxC,KAAK,QAJT,UAMI,eAAC,IAAD,WACI,cAAC,IAAD,CAAKnD,KAAM,EAAX,SACI,cAAC,IAAD,CACIF,MAAO,CAAEC,UAAW,QACpB2H,IAAK,cAAC,IAAD,CAAOA,IAAG,UAAE9B,EAAO3C,oBAAT,QAAyB,qEACxC1C,KAAM,QAGd,eAAC,IAAD,CAAKP,KAAM,GAAX,UACI,eAAC,IAAD,CAAK2H,OAAQ,GAAb,UACI,cAAC,IAAD,CAAKlD,UAAU,aAAazE,KAAM,IAElC,cAAC,IAAD,CAAKyE,UAAU,aAAazE,KAAM,GAAlC,SACI,cAAC,IAAK4H,KAAN,CACIC,MAAM,OACN1E,KAAK,WAFT,SAGI,cAAC,IAAD,CAAO5C,KAAK,QAAQ4E,UAAQ,QAGpC,cAAC,IAAD,CAAKV,UAAU,aAAazE,KAAM,GAAlC,SACI,cAAC,IAAK4H,KAAN,CACIC,MAAM,cACN1E,KAAK,aAFT,SAGI,cAAC,IAAD,CAAO5C,KAAK,QAAQ4E,UAAQ,WAIxC,eAAC,IAAD,CAAKwC,OAAQ,GAAI1H,OAAQ,EAAzB,UACI,cAAC,IAAD,CAAKwE,UAAU,aAAazE,KAAM,IAElC,cAAC,IAAD,CAAKyE,UAAU,aAAazE,KAAM,GAAlC,SACI,cAAC,IAAK4H,KAAN,CACIC,MAAM,SACN1E,KAAK,SAFT,SAGI,cAAC,IAAD,CAAO5C,KAAK,QAAQ4E,UAAQ,QAGpC,cAAC,IAAD,CAAKV,UAAU,aAAazE,KAAM,GAAlC,SACI,cAAC,IAAK4H,KAAN,CACIC,MAAM,kBACN1E,KAAK,gBAFT,SAGI,cAAC,IAAD,CAAO5C,KAAK,QAAQ4E,UAAQ,QAGpC,cAAC,IAAD,CAAKV,UAAU,aAAazE,KAAM,aAK9C,eAAC,IAAD,WACI,eAAC,IAAD,CAAK2H,OAAQ,GAAb,UACI,cAAC,IAAD,CAAKlD,UAAU,aAAazE,KAAM,EAAlC,SACI,cAAC,IAAK4H,KAAN,CACIC,MAAM,kBACN1E,KAAK,iBAFT,SAGI,cAAC,IAAD,CAAO5C,KAAK,QAAQ4E,UAAQ,QAGpC,cAAC,IAAD,CAAKV,UAAU,aAAazE,KAAM,EAAlC,SACI,cAAC,IAAK4H,KAAN,CACIC,MAAM,gBACN1E,KAAK,YAFT,SAGI,cAAC,IAAD,CAAO5C,KAAK,QAAQ4E,UAAQ,QAGpC,cAAC,IAAD,CAAKV,UAAU,aAAazE,KAAM,EAAlC,SACI,cAAC,IAAK4H,KAAN,CACIC,MAAM,gBACN1E,KAAK,YAFT,SAGI,cAAC,IAAD,CAAO5C,KAAK,QAAQ4E,UAAQ,QAGpC,cAAC,IAAD,CAAKV,UAAU,aAAazE,KAAM,EAAlC,SACI,cAAC,IAAK4H,KAAN,CACIC,MAAM,iBACN1E,KAAK,aAFT,SAGI,cAAC,IAAD,CAAO5C,KAAK,QAAQ4E,UAAQ,WAIxC,eAAC,IAAD,CAAKnF,KAAM,GAAX,UACI,cAAC,IAAK4H,KAAN,CACIC,MAAM,oBACN1E,KAAK,mBAFT,SAGI,cAAC,IAAD,CAAO5C,KAAK,QAAQ4E,UAAQ,MAEhC,cAAC,IAAKyC,KAAN,CACIC,MAAM,oBACN1E,KAAK,mBAFT,SAGI,cAAC,IAAD,CAAO5C,KAAK,QAAQ4E,UAAQ,eAK5C,cAAC,IAAD,sCCtNL,UAA0B,iCCuB1B,SAAS4E,IAEtB,OACE,qBAAKtF,UAAU,MAAf,SACE,cAACuF,EAAA,EAAD,CAAWvF,UAAU,eAArB,SACE,cAACwF,EAAA,EAAD,CAAKxF,UAAU,kCAAf,SACE,eAACyF,EAAA,EAAD,CAAMzF,UAAU,UAAhB,UACE,qBAAKA,UAAU,SAAf,SACE,qBAAKiD,IAAKyC,MAEZ,cAACD,EAAA,EAAKE,KAAN,UACE,+BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,UAAW/L,EAAUgM,OAAK,IAC1C,cAAC,IAAD,CAAOF,KAAK,aAAaC,UAAWE,IACpC,cAAC,IAAD,CAAOH,KAAK,YAAYC,UAAWG,IACnC,cAAC,IAAD,CAAOJ,KAAK,gBAAgBC,UAAWnC,oB,wCC7BzDuC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,mBCd1B,IAAM7L,EAAQ8L,EAAQ,KAEhBxJ,EAActC,EAAM+L,OAAO,CAG7BC,QAAS,gDAGPvI,EAAmBzD,EAAM+L,OAAO,CAElCC,QAAS,4BAGbC,EAAOC,QAAU,CACb5J,cACAmB,sB","file":"static/js/main.8ffd01c9.chunk.js","sourcesContent":["// importing bootstrap elements------->\nimport { Input, Form, Button, Row, Col } from 'antd';\nimport { DownloadOutlined } from '@ant-design/icons';\n\n// importing hooks and axios------------>\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport axios from 'axios';\nimport QRCode from 'qrcode.react';\n\n// importing css files----------------->\nimport '../App.css';\n\nexport default function ParseSDR() {\n    //const { TextArea } = Input;\n    let [myuri, setmyuri] = useState(\" \");\n\n\n    useEffect(() => {\n        fetchProducts()\n    }, [])\n\n    const { TextArea } = Input;\n\n    const fetchProducts = async () => {\n        try {\n\n            // const response = await axios.get('https://sabhi-task.com/user/uri');\n            const response = await axios.get('http://localhost:12345/user/uri');\n            console.log(response.data.data.uri);\n            setmyuri(response.data.data.uri);\n            console.log(myuri);\n\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n\n\n    // using history hook to navigate-------->\n    const history = useHistory();\n    function handleClick() {\n        history.push({\n            pathname: \"/parse_sdr\",\n            // state: {\n            //     uri: myuri\n            // }\n        });\n    }\n\n    return (\n        <Form>\n            \n            <TextArea\n                value={myuri}\n                // onChange={onChange}\n                placeholder=\"uri generate here...\"\n                autoSize={{ minRows: 8, maxRows: 12 }}\n                style={{ marginTop: 30 }}\n            />\n            <Row>\n                <Col span={8} offset={10}>\n                    <Button type=\"primary\" onClick={handleClick} shape=\"round\" size='large' style={{ marginTop: 10 }}>Parse SDR</Button>\n                </Col>\n            </Row>\n\n        </Form>\n    );\n}","\n// importing antd modules for file uploader-------------------->\nimport { Upload, Row, Col, Divider, Form, Input, Button, Steps, message, Spin, Anchor } from 'antd';\nimport { PictureOutlined, IdcardOutlined } from '@ant-design/icons';\nimport { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { apiInstance, sabhiApiInstance } from '../axios-instance';\n\nexport default function PictureUploader() {\n    let history = useHistory();\n    const { Step } = Steps;\n    const { Dragger } = Upload;\n    const { Link } = Anchor;\n\n    const [isDisable, setIsDisable] = useState(false);\n    const [identityCardFrontUrl, setIdentityCardFrontUrl] = useState('');\n    const [identityCardBackUrl, setIdentityCardBackUrl] = useState('');\n    const [identity, setIdentity] = useState(\"\");\n    const [isLoading, setIsloading] = useState(false);\n\n    const labelStyle = {\n        display: \"block\",\n        marginTop: \"30px\",\n        fontSize: \"16px\",\n        fontWeight: \"400\",\n        paddingBottom: \"10px\",\n    };\n\n    const getIdentity = async () => {\n        try {\n            setIsloading(true);\n\n            const response = await apiInstance.get('did');\n            console.log(response);\n            if (response) setIdentity(response.data.did);\n            console.log(identity);\n\n            localStorage.setItem('DID', response.data.did);\n            console.log(localStorage.getItem('DID'));\n            setIsloading(false);\n        } catch (error) {\n            console.log(error);\n        }\n    }\n    useEffect(() => {\n\n        getIdentity();\n\n    }, []);\n\n\n    // function doneBtnHandler() {\n    //     history.push({\n    //         pathname: '/form_sdr',\n    //         state: identity,\n    //     });\n    // }\n\n    function getBase64(file) {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = () => resolve(reader.result);\n            reader.onerror = error => reject(error);\n        });\n    }\n\n    function handleUploadIdenitytCardFront(file) {\n        return new Promise(async (resolve, reject) => {\n            try {\n                const base64Img = await getBase64(file);\n                const response = await sabhiApiInstance.post(\"ocr/cnic/front\", {\n                    did: identity,\n                    cnic: base64Img\n                });\n                console.log(response);\n                if (response) resolve(response.data);\n            } catch (error) {\n                if (error.response) {\n                    message.error(error.response.data.error.message)\n                        .then(() => reject(error));\n                } else {\n                    reject(error);\n                }\n            }\n        });\n    }\n\n    function handleUploadIdenitytCardBack(file) {\n        return new Promise(async (resolve, reject) => {\n            try {\n                const base64Img = await getBase64(file);\n                const response = await sabhiApiInstance.put(\"ocr/cnic/back\", {\n                    did: identity,\n                    cnic: base64Img\n                });\n                if (response) resolve(response.data);\n            } catch (error) {\n                if (error.response) {\n                    message.error(error.response.data.error.message)\n                        .then(() => reject(error));\n                } else {\n                    reject(error);\n                }\n            }\n        });\n    }\n\n    function handleProfileImageUpload(file) {\n        return new Promise(async (resolve, reject) => {\n            try {\n                const base64Img = await getBase64(file);\n                const response = await sabhiApiInstance.put(\"ocr/profile\", {\n                    did: identity,\n                    profileImage: base64Img\n                });\n                if (response) resolve(response.data);\n            } catch (error) {\n                if (error.response) {\n                    message.error(error.response.data.error.message)\n                        .then(() => reject(error));\n                } else {\n                    reject(error);\n                }\n            }\n        });\n    }\n\n    const identityCardBackImageUploader = {\n        name: 'cnic',\n        multiple: false,\n        listType: \"picture\",\n        customRequest: async ({ file, onSuccess, onError, onProgress }) => {\n            try {\n                const res = await handleUploadIdenitytCardBack(file, onProgress);\n                if (res.status) {\n                    onSuccess('ok');\n                    setCurrent(current + 1);\n                }\n            } catch (error) {\n                console.log(error, '   <<<<<<< ');\n                onError(error);\n            }\n        },\n        accept: \".png, .jpg, .jpeg, .tiff\",\n        beforeUpload: (file) => {\n            const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png' || file.type === 'image/jpg' || file.type === 'image/tff';\n            if (!isJpgOrPng) {\n                message.error('You can only upload JPG/PNG/JPEG/TFF file!');\n            }\n            // const isLt2M = file.size / 1024 / 1024 < 2;\n            // if (!isLt2M) {\n            //     message.error('Image must smaller than 2MB!');\n            // }\n            // return isJpgOrPng && isLt2M;\n            return isJpgOrPng;\n        },\n        onChange({ file, fileList }) {\n            const { status } = file;\n            console.log(status);\n            if (status !== 'uploading') {\n                console.log(file, fileList);\n            }\n            if (status === 'done') {\n                message.success(`${file.name} file uploaded successfully.`);\n            } else if (status === 'error') {\n                message.error(`${file.name} file upload failed.`);\n            }\n        },\n    }\n\n    const identityCardFrontImageUploader = {\n        name: 'cnic',\n        multiple: false,\n        listType: \"picture\",\n        customRequest: async ({ file, onSuccess, onError }) => {\n            try {\n\n                setIsDisable(true);\n                const res = await handleUploadIdenitytCardFront(file);\n                setIdentityCardFrontUrl(res.data.cnic);\n                if (res.status) {\n                    onSuccess('ok');\n                    setCurrent(current + 1);\n                }\n            } catch (error) {\n                console.log('i am here in error');\n                console.log(error);\n                onError(error);\n            }\n        },\n        accept: \".png, .jpg, .jpeg, .tiff\",\n        beforeUpload: (file) => {\n            const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png' || file.type === 'image/jpg' || file.type === 'image/tff';\n            if (!isJpgOrPng) {\n                message.error('You can only upload JPG/PNG file!');\n            }\n            // const isLt2M = file.size / 1024 / 1024 < 2;\n            // if (!isLt2M) {\n            //     message.error('Image must smaller than 2MB!');\n            // }\n            // return isJpgOrPng && isLt2M;\n            return isJpgOrPng;\n        },\n        onChange({ file, fileList }) {\n            // setInterval(() => {\n            //     console.log(file, '   <<<<<<<<<<<  ');\n            // }, 1000);\n            const { status } = file;\n            console.log(status);\n            if (status !== 'uploading') {\n                console.log(file, fileList);\n            }\n            if (status === 'done') {\n                message.success(`${file.name} file uploaded successfully.`);\n            } else if (status === 'error') {\n                message.error(`${file.name} file upload failed.`);\n            }\n        },\n    };\n\n\n    const profileImageUploader = {\n        name: 'cnic',\n        multiple: false,\n        listType: \"picture\",\n        customRequest: async ({ file, onSuccess, onError }) => {\n            try {\n                setIsDisable(true);\n                const res = await handleProfileImageUpload(file);\n                setIdentityCardFrontUrl(res.data.cnic);\n                if (res.status) {\n                    onSuccess('ok');\n                    history.push({\n                        pathname: '/form_sdr',\n                    });\n                }\n            } catch (error) {\n                console.log('i am here in error');\n                onError(error);\n            }\n        },\n        accept: \".png, .jpg, .jpeg, .tiff\",\n        beforeUpload: (file) => {\n            const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png' || file.type === 'image/jpg' || file.type === 'image/tff';\n            if (!isJpgOrPng) {\n                message.error('You can only upload JPG/PNG file!');\n            }\n            // const isLt2M = file.size / 1024 / 1024 < 2;\n            // if (!isLt2M) {\n            //     message.error('Image must smaller than 2MB!');\n            // }\n            // return isJpgOrPng && isLt2M;\n            return isJpgOrPng;\n        },\n        onChange({ file, fileList }) {\n            const { status } = file;\n            console.log(status);\n            if (status !== 'uploading') {\n                console.log(file, fileList);\n            }\n            if (status === 'done') {\n                message.success(`${file.name} file uploaded successfully.`);\n            } else if (status === 'error') {\n                message.error(`${file.name} file upload failed.`);\n            }\n        },\n    };\n\n    const steps = [\n        {\n            title: 'Identity Card Front',\n            content: <Dragger {...identityCardFrontImageUploader}>\n                <p className=\"ant-upload-drag-icon\">\n                    <IdcardOutlined />\n                </p>\n                <p className=\"ant-upload-text\">Click or drag identity card front side image to this area to upload</p>\n                <p className=\"ant-upload-hint\">\n                    Make sure the information on the front side of identity card is clear and readable\n                </p>\n            </Dragger>,\n        },\n        {\n            title: 'Identity Card Back',\n            content: <Dragger {...identityCardBackImageUploader}>\n                <p className=\"ant-upload-drag-icon\">\n                    <IdcardOutlined />\n                </p>\n                <p className=\"ant-upload-text\">Click or drag identity card back side image to this area to upload</p>\n                <p className=\"ant-upload-hint\">\n                    Make sure the information on the back side of identity card is clear and readable\n                </p>\n            </Dragger>,\n        },\n        {\n            title: 'Profile Picture',\n            content: <Dragger {...profileImageUploader}>\n                <p className=\"ant-upload-drag-icon\">\n                    <PictureOutlined />\n                </p>\n                <p className=\"ant-upload-text\">Click or drag an image of your face as profile picture</p>\n                <p className=\"ant-upload-hint\">\n                    make sure your face is clear in the image we recommend you use an updated picture\n                </p>\n            </Dragger>,\n        },\n    ];\n\n    const [current, setCurrent] = useState(0);\n\n    const next = () => {\n        setCurrent(current + 1);\n    };\n\n    // const prev = () => {\n    //     setCurrent(current - 1);\n    // };\n    // using history hook to navigate-------->\n\n\n    // rendering uploader---------------------------------------------->\n    return (\n        <>\n            <Spin spinning={isLoading}>\n                <Form\n                    layout=\"vertical\"\n                    name=\"basic\"\n                >\n                    <Row>\n                        <Col span={24}>\n                            <label htmlFor=\"identityValue\" style={labelStyle}>\n                                Identity\n                                <Input size=\"large\" disabled value={identity ?? ''} id=\"identityValue\" />\n                            </label>\n                        </Col>\n                    </Row>\n                    <Divider orientation=\"left\"></Divider>\n                    <Steps current={current}>\n                        {steps.map(item => (\n                            <Step key={item.title} title={item.title} />\n                        ))}\n                    </Steps>\n                    <div className=\"steps-content\">{steps[current].content}</div>\n                    {/* <div className=\"steps-action\">\n                        {current < steps.length - 1 && (\n                            <Button type=\"primary\" onClick={() => next()}>\n                                Next\n                            </Button>\n                        )}\n                        {current === steps.length - 1 && (\n                            <Button type=\"primary\" onClick={doneBtnHandler}>\n                                Done\n                            </Button>\n                        )}\n                    </div> */}\n                </Form>\n            </Spin>\n        </>\n    );\n}","// importing antd components------------------------->\nimport React, { useEffect, useState } from 'react';\nimport { Form, Input, Button, Col, Row, Image, Avatar, Spin, Space } from 'antd';\nimport { useHistory } from 'react-router-dom';\nimport { sabhiApiInstance, apiInstance } from '../axios-instance';\nimport { FileDoneOutlined } from '@ant-design/icons';\n\n// creating antdform----------------->\n\nexport default function Antdform() {\n    const did = localStorage.getItem('DID');\n    let history = useHistory();\n    const [form] = Form.useForm();\n    const [isLoading, setIsloading] = useState('false');\n    const [images, setImages] = useState({});\n\n    const getOcrRecord = async () => {\n        try {\n            setIsloading(true);\n            const response = await sabhiApiInstance.get(`ocr/${did}`);\n            const { identityCardFrontData, identityCardBackData, profileImage, identityCardFrontImage, identityCardBackImage } = response.data.data[0];\n            setImages({ profileImage: profileImage, identityCardFrontImage: identityCardFrontImage, identityCardBackImage: identityCardBackImage });\n            form.setFieldsValue({\n                fullName: identityCardFrontData.nameEnglish,\n                fatherName: identityCardFrontData.fatherNameEnglish,\n                gender: identityCardFrontData.gender,\n                countryOfStay: identityCardFrontData.countryOfStay,\n                identityNumber: identityCardFrontData.identityNumber,\n                issueDate: identityCardFrontData.dateOfIssue,\n                birthDate: identityCardFrontData.dateOfBirth,\n                expireDate: identityCardFrontData.dateOfExpiry,\n                permanentAddress: identityCardBackData.permenantAddress,\n                temporaryAddress: identityCardBackData.presentAddress,\n            });\n            setIsloading(false);\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    useEffect(() => {\n        getOcrRecord();\n    }, []);\n\n\n    const createVerifiablePresentation = async (values) => {\n        try {\n            const response = await apiInstance.post('vp', values);\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    const onFinish = (values) => {\n        setIsloading(true);\n        values.profileImage = images.profileImage;\n        values.did = did;\n        values.identityCardBackImage = images.identityCardBackImage;\n        values.identityCardFrontImage = images.identityCardFrontImage;\n        createVerifiablePresentation(values);\n        setIsloading(false);\n        history.push({\n            pathname: '/user_profile',\n        });\n    };\n\n    const onFinishFailed = (errorInfo) => {\n        console.log('Failed:', errorInfo);\n    };\n\n    // rendering antd form ---------------------->\n    return (\n        <div>\n            <Space size=\"large\">\n                <Spin spinning={isLoading}>\n                    <Form\n                        style={{ marginTop: \"18px\" }}\n                        layout=\"vertical\"\n                        form={form}\n                        name=\"basic\"\n                        onFinish={onFinish}\n                        onFinishFailed={onFinishFailed}\n                    >\n                        <Row>\n                            <Col span={4}>\n                                <Avatar\n                                    style={{ marginTop: \"18px\" }}\n                                    src={<Image src={images.profileImage ?? 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png'} />}\n                                    size={140}\n                                />\n                            </Col>\n                            <Col span={20}>\n                                <Row gutter={16}>\n                                    <Col className=\"gutter-row\" span={2}>\n                                    </Col>\n                                    <Col className=\"gutter-row\" span={11}>\n                                        <Form.Item\n                                            label=\"Name\"\n                                            name=\"fullName\"\n                                            rules={[{ required: true, message: 'Please enter Complete Name' }]}>\n                                            <Input size=\"small\" />\n                                        </Form.Item>\n                                    </Col>\n                                    <Col className=\"gutter-row\" span={11}>\n                                        <Form.Item\n                                            label=\"Father Name\"\n                                            name=\"fatherName\"\n                                            rules={[{ required: true, message: 'Please enter Father Name' }]}>\n                                            <Input size=\"small\" />\n                                        </Form.Item>\n                                    </Col>\n                                </Row>\n                                <Row gutter={16} offset={4}>\n                                    <Col className=\"gutter-row\" span={2}>\n                                    </Col>\n                                    <Col className=\"gutter-row\" span={11}>\n                                        <Form.Item\n                                            label=\"Gender\"\n                                            name=\"gender\"\n                                            rules={[{ required: true, message: 'Please enter gender' }]}>\n                                            <Input size=\"small\" />\n                                        </Form.Item>\n                                    </Col>\n                                    <Col className=\"gutter-row\" span={11}>\n                                        <Form.Item\n                                            label=\"Country of Stay\"\n                                            name=\"countryOfStay\"\n                                            rules={[{ required: true, message: 'Please enter the country of stay' }]}>\n                                            <Input size=\"small\" />\n                                        </Form.Item>\n                                    </Col>\n                                    <Col className=\"gutter-row\" span={6}>\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Row gutter={22}>\n                                <Col className=\"gutter-row\" span={6}>\n                                    <Form.Item\n                                        label=\"Identity Number\"\n                                        name=\"identityNumber\"\n                                        rules={[{ required: true, message: 'Enter the Identity Number' }]}>\n                                        <Input size=\"small\" />\n                                    </Form.Item>\n                                </Col>\n                                <Col className=\"gutter-row\" span={6}>\n                                    <Form.Item\n                                        label=\"Date of Issue\"\n                                        name=\"issueDate\"\n                                        rules={[{ required: true, message: 'Enter Date of Issue' }]}>\n                                        <Input size=\"small\" />\n                                    </Form.Item>\n                                </Col>\n                                <Col className=\"gutter-row\" span={6}>\n                                    <Form.Item\n                                        label=\"Date of Birth\"\n                                        name=\"birthDate\"\n                                        rules={[{ required: true, message: 'Enter Date of Birth' }]}>\n                                        <Input size=\"small\" />\n                                    </Form.Item>\n                                </Col>\n                                <Col className=\"gutter-row\" span={6}>\n                                    <Form.Item\n                                        label=\"Date of Expiry\"\n                                        name=\"expireDate\"\n                                        rules={[{ required: true, message: 'Enter expiry Date' }]}>\n                                        <Input size=\"small\" />\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n                            <Col span={24}>\n                                <Form.Item\n                                    label=\"Permanent Address\"\n                                    name=\"permanentAddress\"\n                                    rules={[{ required: true, message: 'Please enter permanent address' }]}>\n                                    <Input size=\"small\" />\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"Temporary Address\"\n                                    name=\"temporaryAddress\"\n                                    rules={[{ required: true, message: 'Please enter temporary address' }]}>\n                                    <Input size=\"small\" />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col span={4} offset={10}>\n                                <Form.Item>\n                                    <Button type=\"primary\" htmlType=\"submit\" shape=\"round\" size='large' block>\n                                        <FileDoneOutlined />\n                                    Submit\n                            </Button>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Spin>\n            </Space>\n        </div >\n    );\n\n}","import React, { useEffect, useState } from 'react';\nimport { Form, Input, Col, Row, Image, Avatar, Spin, Space, message } from 'antd';\nimport { useHistory } from 'react-router-dom';\nimport { sabhiApiInstance } from \"../axios-instance\";\nimport { io } from \"socket.io-client\";\nimport Swal from 'sweetalert2';\n\nexport default function UserProfile() {\n    const did = localStorage.getItem('DID');\n    console.log(localStorage.getItem('DID'));\n    const [omniData, setOmniData] = useState(\"\");\n    const [form] = Form.useForm();\n    const [isLoading, setIsloading] = useState('false');\n    const [userData, setUserData] = useState(null);\n    const [images, setImages] = useState({});\n\n    useEffect(() => {\n        getData();\n    }, []);\n\n\n    let test = \"\"\n    let socket;\n    // socket\n    useEffect(() => {\n\n        const ENDPOINT = 'http://localhost:12345/';\n        socket = io(ENDPOINT);\n        console.log(socket);\n        socket.on('chat', data => {\n            console.log(data);\n        });\n\n        socket.on('displayOmniCheck', data => {\n            console.log(data);\n            test = data.message;\n            setOmniData(data.message);\n            handleswirlTwo();\n        });\n\n    }, []);\n\n    async function getData() {\n        try {\n            setIsloading(true);\n            const response = await sabhiApiInstance.get(`application/${did}`);\n            console.log(response.data.data[0]);\n            const { fullName, fatherName, profileImage, countryOfStay, gender, identityNumber, issueDate, birthDate, expireDate, permanentAddress, temporaryAddress } = response.data.data[0];\n            setImages({ profileImage: profileImage, });\n            form.setFieldsValue({\n                fullName: fullName.value,\n                fatherName: fatherName.value,\n                gender: gender.value,\n                countryOfStay: countryOfStay.value,\n                identityNumber: identityNumber.value,\n                issueDate: issueDate.value,\n                birthDate: birthDate.value,\n                expireDate: expireDate.value,\n                permanentAddress: permanentAddress.value,\n                temporaryAddress: temporaryAddress.value,\n            });\n            setIsloading(false);\n        } catch (error) {\n            message.error('something went wrong!', error);\n        }\n    }\n\n    function handleswirlTwo() {\n        const swalWithBootstrapButtons = Swal.mixin({\n            customClass: {\n                confirmButton: 'btn btn-success',\n                cancelButton: 'btn btn-danger'\n            },\n            buttonsStyling: false\n        });\n        swalWithBootstrapButtons.fire({\n            title: 'Please confirm following',\n            html: `${test}`,\n            allowOutsideClick: false,\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonText: 'Yes, it is me',\n            cancelButtonText: 'No,it is not me',\n            reverseButtons: true\n        }).then((result) => {\n            if (result.isConfirmed) {\n                console.log('i am confirmed !!! ');\n                socket.emit('omniResponse', { status: true, message: \"omni is accepted!\" });\n                swalWithBootstrapButtons.fire(\n                    'Confirmed!',\n                    'Your data has been confirmed',\n                    'success'\n                )\n            } else if (\n                /* Read more about handling dismissals below */\n                result.dismiss === Swal.DismissReason.cancel\n            ) {\n                console.log('i am rejected !!!');\n                socket.emit('omniResponse', { status: false, message: \"omni is rejected!\" });\n                swalWithBootstrapButtons.fire(\n                    'Cancelled',\n                    'Your data could not be confirmed :(',\n                    'error'\n                )\n            }\n        });\n    }\n\n\n\n    return (\n        <div>\n            <Space size=\"large\">\n                <Spin spinning={isLoading}>\n                    <Form\n                        style={{ marginTop: \"18px\" }}\n                        layout=\"vertical\"\n                        form={form}\n                        name=\"basic\"\n                    >\n                        <Row>\n                            <Col span={4}>\n                                <Avatar\n                                    style={{ marginTop: \"18px\" }}\n                                    src={<Image src={images.profileImage ?? 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png'} />}\n                                    size={140}\n                                />\n                            </Col>\n                            <Col span={20}>\n                                <Row gutter={16}>\n                                    <Col className=\"gutter-row\" span={2}>\n                                    </Col>\n                                    <Col className=\"gutter-row\" span={11}>\n                                        <Form.Item\n                                            label=\"Name\"\n                                            name=\"fullName\">\n                                            <Input size=\"small\" disabled />\n                                        </Form.Item>\n                                    </Col>\n                                    <Col className=\"gutter-row\" span={11}>\n                                        <Form.Item\n                                            label=\"Father Name\"\n                                            name=\"fatherName\">\n                                            <Input size=\"small\" disabled />\n                                        </Form.Item>\n                                    </Col>\n                                </Row>\n                                <Row gutter={16} offset={4}>\n                                    <Col className=\"gutter-row\" span={2}>\n                                    </Col>\n                                    <Col className=\"gutter-row\" span={11}>\n                                        <Form.Item\n                                            label=\"Gender\"\n                                            name=\"gender\">\n                                            <Input size=\"small\" disabled />\n                                        </Form.Item>\n                                    </Col>\n                                    <Col className=\"gutter-row\" span={11}>\n                                        <Form.Item\n                                            label=\"Country of Stay\"\n                                            name=\"countryOfStay\">\n                                            <Input size=\"small\" disabled />\n                                        </Form.Item>\n                                    </Col>\n                                    <Col className=\"gutter-row\" span={6}>\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Row gutter={22}>\n                                <Col className=\"gutter-row\" span={6}>\n                                    <Form.Item\n                                        label=\"Identity Number\"\n                                        name=\"identityNumber\">\n                                        <Input size=\"small\" disabled />\n                                    </Form.Item>\n                                </Col>\n                                <Col className=\"gutter-row\" span={6}>\n                                    <Form.Item\n                                        label=\"Date of Issue\"\n                                        name=\"issueDate\">\n                                        <Input size=\"small\" disabled />\n                                    </Form.Item>\n                                </Col>\n                                <Col className=\"gutter-row\" span={6}>\n                                    <Form.Item\n                                        label=\"Date of Birth\"\n                                        name=\"birthDate\">\n                                        <Input size=\"small\" disabled />\n                                    </Form.Item>\n                                </Col>\n                                <Col className=\"gutter-row\" span={6}>\n                                    <Form.Item\n                                        label=\"Date of Expiry\"\n                                        name=\"expireDate\">\n                                        <Input size=\"small\" disabled />\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n                            <Col span={24}>\n                                <Form.Item\n                                    label=\"Permanent Address\"\n                                    name=\"permanentAddress\">\n                                    <Input size=\"small\" disabled />\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"Temporary Address\"\n                                    name=\"temporaryAddress\">\n                                    <Input size=\"small\" disabled />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n                    <Row>\n                        Verified By: XYZ\n                    </Row>\n                </Spin>\n            </Space>\n        </div >\n    );\n}","export default __webpack_public_path__ + \"static/media/dark.e4d8b6e7.svg\";","// importing bootstrap elements------->\nimport {\n  Container,\n  Card,\n  Row\n} from 'react-bootstrap';\n\n// importing components and router components------------>\nimport { Route, Switch } from 'react-router-dom';\n// import FormSDR from './components/SDR.generator.form';\nimport ParseSDR from './components/ParseSDR';\nimport fileUploader from './components/ImageUploader';\nimport antsdrform from './components/Antd-form';\nimport UserProfile from './components/UserProfile';\n\n// importing css files----------------->\nimport './App.css';\n\n// importing image files---------------->\nimport sabhilogo from './images/dark.svg';\n\n\n// rendering view------------------------>\nexport default function App() {\n\n  return (\n    <div className=\"App\">\n      <Container className=\"containsCard\">\n        <Row className=\"justify-content-center centered\">\n          <Card className=\"theCard\">\n            <div className=\"circle\">\n              <img src={sabhilogo} />\n            </div>\n            <Card.Body>\n              <main>\n                <Switch>\n                  <Route path='/' component={ParseSDR} exact />\n                  <Route path='/parse_sdr' component={fileUploader} />\n                  <Route path='/form_sdr' component={antsdrform} />\n                  <Route path='/user_profile' component={UserProfile} />\n                </Switch>\n              </main>\n            </Card.Body>\n          </Card>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'antd/dist/antd.css';\nimport Swal from 'sweetalert2/dist/sweetalert2.js'\nimport 'sweetalert2/src/sweetalert2.scss'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n","const axios = require('axios');\n\nconst apiInstance = axios.create({\n    // baseURL: 'https://sabhi-sdr-test-node.herokuapp.com/',\n    // baseURL: 'http://localhost:2011/',\n    baseURL: 'https://client-server-veramo.herokuapp.com/',\n});\n\nconst sabhiApiInstance = axios.create({\n    // baseURL: 'http://localhost:12345/',\n    baseURL: 'https://sabhi-task.com/',\n});\n\nmodule.exports = {\n    apiInstance,\n    sabhiApiInstance\n}"],"sourceRoot":""}