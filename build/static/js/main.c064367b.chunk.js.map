{"version":3,"sources":["images/dark.svg","components/SplashScreen.js","components/Antd-form.js","components/UserProfile.js","images/onboarding.png","components/OnBoardScreen.js","components/ImageUploader-1.js","App.js","index.js","axios-instance.js"],"names":["SplashScreen","history","useHistory","useEffect","interval","setTimeout","a","push","clearInterval","class","style","display","justifyContent","alignItems","width","src","Logo","Antdform","did","localStorage","getItem","Form","useForm","form","useState","isLoading","setIsloading","images","setImages","getOcrRecord","sabhiApiInstance","get","response","data","identityCardFrontData","identityCardBackData","profileImage","identityCardFrontImage","identityCardBackImage","setFieldsValue","fullName","nameEnglish","fatherName","fatherNameEnglish","gender","countryOfStay","identityNumber","issueDate","dateOfIssue","birthDate","dateOfBirth","expireDate","dateOfExpiry","permanentAddress","permenantAddress","temporaryAddress","presentAddress","console","log","createVerifiablePresentation","values","apiInstance","post","error","size","spinning","marginTop","layout","name","onFinish","pathname","onFinishFailed","errorInfo","span","gutter","className","Item","label","rules","required","message","offset","type","htmlType","shape","block","FileDoneOutlined","UserProfile","setOmniData","getData","socket","test","value","io","on","swalWithBootstrapButtons","Swal","mixin","customClass","confirmButton","cancelButton","buttonsStyling","fire","title","html","allowOutsideClick","icon","showCancelButton","confirmButtonText","cancelButtonText","reverseButtons","then","result","isConfirmed","emit","status","dismiss","DismissReason","cancel","handleswirlTwo","disabled","OnBoardScreen","createIdentity","loading","setItem","success","height","OnBoardImage","position","top","background","bordeRadius","onClick","Foo","props","state","pictures","onDrop","bind","pictureFiles","pictureDataURLs","this","setState","withIcon","buttonText","onChange","imgExtension","maxFileSize","singleImage","withPreview","React","Component","App","path","component","exact","PicturesWall","antsdrform","ReactDOM","render","document","getElementById","axios","require","create","baseURL","module","exports"],"mappings":"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","file":"static/js/main.c064367b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/dark.e4d8b6e7.svg\";","import React, { useEffect } from 'react';\nimport { Row, Col, Space } from 'antd';\nimport { useHistory } from 'react-router-dom';\nimport Logo from '../images/dark.svg';\nimport '../App.css';\n\nexport default function SplashScreen() {\n    let history = useHistory();\n    const style = { display: 'inline-flex', justifyContent: 'center', alignItems: 'center', width: '500px' };\n\n    useEffect(() => {\n\n        let interval = setTimeout(async () => {\n            history.push('/onboard');\n        }, 3000);\n\n        // willUnmout called\n        return () => {\n            clearInterval(interval);\n        }\n    }, []);\n\n    return (\n        <div class=\"container\" style={style}>\n            <img src={Logo} width=\"200px\" />\n        </div>\n    );\n}","// importing antd components------------------------->\nimport React, { useEffect, useState } from 'react';\nimport { Form, Input, Button, Col, Row, Image, Avatar, Spin, Space } from 'antd';\nimport { useHistory } from 'react-router-dom';\nimport { sabhiApiInstance, apiInstance } from '../axios-instance';\nimport { FileDoneOutlined } from '@ant-design/icons';\n\n// creating antdform----------------->\n\nexport default function Antdform() {\n    const did = localStorage.getItem('DID');\n    let history = useHistory();\n    const [form] = Form.useForm();\n    const [isLoading, setIsloading] = useState('false');\n    const [images, setImages] = useState({});\n\n    const getOcrRecord = async () => {\n        try {\n            setIsloading(true);\n            const response = await sabhiApiInstance.get(`ocr/${did}`);\n            const { identityCardFrontData, identityCardBackData, profileImage, identityCardFrontImage, identityCardBackImage } = response.data.data[0];\n            setImages({ profileImage: profileImage, identityCardFrontImage: identityCardFrontImage, identityCardBackImage: identityCardBackImage });\n            form.setFieldsValue({\n                fullName: identityCardFrontData.nameEnglish,\n                fatherName: identityCardFrontData.fatherNameEnglish,\n                gender: identityCardFrontData.gender,\n                countryOfStay: identityCardFrontData.countryOfStay,\n                identityNumber: identityCardFrontData.identityNumber,\n                issueDate: identityCardFrontData.dateOfIssue,\n                birthDate: identityCardFrontData.dateOfBirth,\n                expireDate: identityCardFrontData.dateOfExpiry,\n                permanentAddress: identityCardBackData.permenantAddress,\n                temporaryAddress: identityCardBackData.presentAddress,\n            });\n            setIsloading(false);\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    useEffect(() => {\n        getOcrRecord();\n    }, []);\n\n\n    const createVerifiablePresentation = async (values) => {\n        try {\n            const response = await apiInstance.post('vp', values);\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    const onFinish = (values) => {\n        setIsloading(true);\n        values.profileImage = images.profileImage;\n        values.did = did;\n        values.identityCardBackImage = images.identityCardBackImage;\n        values.identityCardFrontImage = images.identityCardFrontImage;\n        createVerifiablePresentation(values);\n        setIsloading(false);\n        history.push({\n            pathname: '/user_profile',\n        });\n    };\n\n    const onFinishFailed = (errorInfo) => {\n        console.log('Failed:', errorInfo);\n    };\n\n    // rendering antd form ---------------------->\n    return (\n        <div>\n            <Space size=\"large\">\n                <Spin spinning={isLoading}>\n                    <Form\n                        style={{ marginTop: \"18px\" }}\n                        layout=\"vertical\"\n                        form={form}\n                        name=\"basic\"\n                        onFinish={onFinish}\n                        onFinishFailed={onFinishFailed}\n                    >\n                        <Row>\n                            <Col span={4}>\n                                <Avatar\n                                    style={{ marginTop: \"18px\" }}\n                                    src={<Image src={images.profileImage ?? 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png'} />}\n                                    size={140}\n                                />\n                            </Col>\n                            <Col span={20}>\n                                <Row gutter={16}>\n                                    <Col className=\"gutter-row\" span={2}>\n                                    </Col>\n                                    <Col className=\"gutter-row\" span={11}>\n                                        <Form.Item\n                                            label=\"Name\"\n                                            name=\"fullName\"\n                                            rules={[{ required: true, message: 'Please enter Complete Name' }]}>\n                                            <Input size=\"small\" />\n                                        </Form.Item>\n                                    </Col>\n                                    <Col className=\"gutter-row\" span={11}>\n                                        <Form.Item\n                                            label=\"Father Name\"\n                                            name=\"fatherName\"\n                                            rules={[{ required: true, message: 'Please enter Father Name' }]}>\n                                            <Input size=\"small\" />\n                                        </Form.Item>\n                                    </Col>\n                                </Row>\n                                <Row gutter={16} offset={4}>\n                                    <Col className=\"gutter-row\" span={2}>\n                                    </Col>\n                                    <Col className=\"gutter-row\" span={11}>\n                                        <Form.Item\n                                            label=\"Gender\"\n                                            name=\"gender\"\n                                            rules={[{ required: true, message: 'Please enter gender' }]}>\n                                            <Input size=\"small\" />\n                                        </Form.Item>\n                                    </Col>\n                                    <Col className=\"gutter-row\" span={11}>\n                                        <Form.Item\n                                            label=\"Country of Stay\"\n                                            name=\"countryOfStay\"\n                                            rules={[{ required: true, message: 'Please enter the country of stay' }]}>\n                                            <Input size=\"small\" />\n                                        </Form.Item>\n                                    </Col>\n                                    <Col className=\"gutter-row\" span={6}>\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Row gutter={22}>\n                                <Col className=\"gutter-row\" span={6}>\n                                    <Form.Item\n                                        label=\"Identity Number\"\n                                        name=\"identityNumber\"\n                                        rules={[{ required: true, message: 'Enter the Identity Number' }]}>\n                                        <Input size=\"small\" />\n                                    </Form.Item>\n                                </Col>\n                                <Col className=\"gutter-row\" span={6}>\n                                    <Form.Item\n                                        label=\"Date of Issue\"\n                                        name=\"issueDate\"\n                                        rules={[{ required: true, message: 'Enter Date of Issue' }]}>\n                                        <Input size=\"small\" />\n                                    </Form.Item>\n                                </Col>\n                                <Col className=\"gutter-row\" span={6}>\n                                    <Form.Item\n                                        label=\"Date of Birth\"\n                                        name=\"birthDate\"\n                                        rules={[{ required: true, message: 'Enter Date of Birth' }]}>\n                                        <Input size=\"small\" />\n                                    </Form.Item>\n                                </Col>\n                                <Col className=\"gutter-row\" span={6}>\n                                    <Form.Item\n                                        label=\"Date of Expiry\"\n                                        name=\"expireDate\"\n                                        rules={[{ required: true, message: 'Enter expiry Date' }]}>\n                                        <Input size=\"small\" />\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n                            <Col span={24}>\n                                <Form.Item\n                                    label=\"Permanent Address\"\n                                    name=\"permanentAddress\"\n                                    rules={[{ required: true, message: 'Please enter permanent address' }]}>\n                                    <Input size=\"small\" />\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"Temporary Address\"\n                                    name=\"temporaryAddress\"\n                                    rules={[{ required: true, message: 'Please enter temporary address' }]}>\n                                    <Input size=\"small\" />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col span={4} offset={10}>\n                                <Form.Item>\n                                    <Button type=\"primary\" htmlType=\"submit\" shape=\"round\" size='large' block>\n                                        <FileDoneOutlined />\n                                    Submit\n                            </Button>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Spin>\n            </Space>\n        </div >\n    );\n\n}","import React, { useEffect, useState } from 'react';\nimport { Form, Input, Col, Row, Image, Avatar, Spin, Space, message } from 'antd';\nimport { useHistory } from 'react-router-dom';\nimport { sabhiApiInstance } from \"../axios-instance\";\nimport { io } from \"socket.io-client\";\nimport Swal from 'sweetalert2';\n\nexport default function UserProfile() {\n    const did = localStorage.getItem('DID');\n    console.log(localStorage.getItem('DID'));\n    const [omniData, setOmniData] = useState(\"\");\n    const [form] = Form.useForm();\n    const [isLoading, setIsloading] = useState('false');\n    const [userData, setUserData] = useState(null);\n    const [images, setImages] = useState({});\n\n    useEffect(() => {\n        getData();\n    }, []);\n\n\n    let test = \"\"\n    let socket;\n    // socket\n    useEffect(() => {\n\n        const ENDPOINT = 'http://localhost:12345/';\n        socket = io(ENDPOINT);\n        console.log(socket);\n        socket.on('chat', data => {\n            console.log(data);\n        });\n\n        socket.on('displayOmniCheck', data => {\n            console.log(data);\n            test = data.message;\n            setOmniData(data.message);\n            handleswirlTwo();\n        });\n\n    }, []);\n\n    async function getData() {\n        try {\n            setIsloading(true);\n            const response = await sabhiApiInstance.get(`application/${did}`);\n            console.log(response.data.data[0]);\n            const { fullName, fatherName, profileImage, countryOfStay, gender, identityNumber, issueDate, birthDate, expireDate, permanentAddress, temporaryAddress } = response.data.data[0];\n            setImages({ profileImage: profileImage, });\n            form.setFieldsValue({\n                fullName: fullName.value,\n                fatherName: fatherName.value,\n                gender: gender.value,\n                countryOfStay: countryOfStay.value,\n                identityNumber: identityNumber.value,\n                issueDate: issueDate.value,\n                birthDate: birthDate.value,\n                expireDate: expireDate.value,\n                permanentAddress: permanentAddress.value,\n                temporaryAddress: temporaryAddress.value,\n            });\n            setIsloading(false);\n        } catch (error) {\n            message.error('something went wrong!', error);\n        }\n    }\n\n    function handleswirlTwo() {\n        const swalWithBootstrapButtons = Swal.mixin({\n            customClass: {\n                confirmButton: 'btn btn-success',\n                cancelButton: 'btn btn-danger'\n            },\n            buttonsStyling: false\n        });\n        swalWithBootstrapButtons.fire({\n            title: 'Please confirm following',\n            html: `${test}`,\n            allowOutsideClick: false,\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonText: 'Yes, it is me',\n            cancelButtonText: 'No,it is not me',\n            reverseButtons: true\n        }).then((result) => {\n            if (result.isConfirmed) {\n                console.log('i am confirmed !!! ');\n                socket.emit('omniResponse', { status: true, message: \"omni is accepted!\" });\n                swalWithBootstrapButtons.fire(\n                    'Confirmed!',\n                    'Your data has been confirmed',\n                    'success'\n                )\n            } else if (\n                /* Read more about handling dismissals below */\n                result.dismiss === Swal.DismissReason.cancel\n            ) {\n                console.log('i am rejected !!!');\n                socket.emit('omniResponse', { status: false, message: \"omni is rejected!\" });\n                swalWithBootstrapButtons.fire(\n                    'Cancelled',\n                    'Your data could not be confirmed :(',\n                    'error'\n                )\n            }\n        });\n    }\n\n\n\n    return (\n        <div>\n            <Space size=\"large\">\n                <Spin spinning={isLoading}>\n                    <Form\n                        style={{ marginTop: \"18px\" }}\n                        layout=\"vertical\"\n                        form={form}\n                        name=\"basic\"\n                    >\n                        <Row>\n                            <Col span={4}>\n                                <Avatar\n                                    style={{ marginTop: \"18px\" }}\n                                    src={<Image src={images.profileImage ?? 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png'} />}\n                                    size={140}\n                                />\n                            </Col>\n                            <Col span={20}>\n                                <Row gutter={16}>\n                                    <Col className=\"gutter-row\" span={2}>\n                                    </Col>\n                                    <Col className=\"gutter-row\" span={11}>\n                                        <Form.Item\n                                            label=\"Name\"\n                                            name=\"fullName\">\n                                            <Input size=\"small\" disabled />\n                                        </Form.Item>\n                                    </Col>\n                                    <Col className=\"gutter-row\" span={11}>\n                                        <Form.Item\n                                            label=\"Father Name\"\n                                            name=\"fatherName\">\n                                            <Input size=\"small\" disabled />\n                                        </Form.Item>\n                                    </Col>\n                                </Row>\n                                <Row gutter={16} offset={4}>\n                                    <Col className=\"gutter-row\" span={2}>\n                                    </Col>\n                                    <Col className=\"gutter-row\" span={11}>\n                                        <Form.Item\n                                            label=\"Gender\"\n                                            name=\"gender\">\n                                            <Input size=\"small\" disabled />\n                                        </Form.Item>\n                                    </Col>\n                                    <Col className=\"gutter-row\" span={11}>\n                                        <Form.Item\n                                            label=\"Country of Stay\"\n                                            name=\"countryOfStay\">\n                                            <Input size=\"small\" disabled />\n                                        </Form.Item>\n                                    </Col>\n                                    <Col className=\"gutter-row\" span={6}>\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Row gutter={22}>\n                                <Col className=\"gutter-row\" span={6}>\n                                    <Form.Item\n                                        label=\"Identity Number\"\n                                        name=\"identityNumber\">\n                                        <Input size=\"small\" disabled />\n                                    </Form.Item>\n                                </Col>\n                                <Col className=\"gutter-row\" span={6}>\n                                    <Form.Item\n                                        label=\"Date of Issue\"\n                                        name=\"issueDate\">\n                                        <Input size=\"small\" disabled />\n                                    </Form.Item>\n                                </Col>\n                                <Col className=\"gutter-row\" span={6}>\n                                    <Form.Item\n                                        label=\"Date of Birth\"\n                                        name=\"birthDate\">\n                                        <Input size=\"small\" disabled />\n                                    </Form.Item>\n                                </Col>\n                                <Col className=\"gutter-row\" span={6}>\n                                    <Form.Item\n                                        label=\"Date of Expiry\"\n                                        name=\"expireDate\">\n                                        <Input size=\"small\" disabled />\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n                            <Col span={24}>\n                                <Form.Item\n                                    label=\"Permanent Address\"\n                                    name=\"permanentAddress\">\n                                    <Input size=\"small\" disabled />\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"Temporary Address\"\n                                    name=\"temporaryAddress\">\n                                    <Input size=\"small\" disabled />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n                    <Row>\n                        Verified By: XYZ\n                    </Row>\n                </Spin>\n            </Space>\n        </div >\n    );\n}","export default __webpack_public_path__ + \"static/media/onboarding.80f4a645.png\";","import React, { useEffect } from 'react';\nimport { Row, Col, Button, message } from 'antd';\nimport { useHistory } from 'react-router-dom';\nimport { UserAddOutlined } from '@ant-design/icons';\nimport OnBoardImage from '../images/onboarding.png';\nimport { apiInstance } from '../axios-instance';\nimport '../App.css';\n\nexport default function OnBoardScreen() {\n    let history = useHistory();\n    const style = { display: 'inline-flex', justifyContent: 'center', alignItems: 'center', width: '500px', height: '500px' };\n    const btnStyle = { position: 'absolute', top: '550px', background: '#4DDFBC', bordeRadius: '16px', 'borderColor': '#4DDFBC' };\n\n    const createIdentity = async () => {\n        try {\n            message.loading('creating identity...')\n                .then(async () => {\n                    const response = await apiInstance.get('did');\n                    if (response) {\n                        localStorage.setItem('DID', response.data.did);\n                        console.log(localStorage.getItem('DID'));\n\n                        message.success('Identity created succesfully!')\n                            .then(() => message.loading('redirecting...', 1)\n                                .then(() => history.push('/ocr')));\n\n                    }\n                })\n        } catch (error) {\n            message.error(\"something went wrong please try again!\");\n        }\n    }\n\n    return (\n\n        <div class=\"container\" style={style}>\n            <img src={OnBoardImage} width=\"200px\" />\n            <Button type=\"primary\" shape=\"round\" style={btnStyle} size='large' onClick={createIdentity}>\n                Create Identity\n            </Button>\n        </div>\n\n\n    );\n}","import React from 'react';\nimport ImageUploader from 'react-images-upload';\n\nclass Foo extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { pictures: [] };\n        this.onDrop = this.onDrop.bind(this);\n    }\n\n    onDrop(pictureFiles, pictureDataURLs) {\n        console.log(pictureFiles);\n        console.log(pictureDataURLs);\n        this.setState({\n            pictures: pictureFiles\n        });\n    }\n\n    render() {\n        return (\n            <ImageUploader\n                withIcon={true}\n                buttonText='Choose images'\n                onChange={this.onDrop}\n                imgExtension={['.jpg', '.png', 'jpeg']}\n                maxFileSize={5242880}\n                singleImage={true}\n                withPreview={true}\n            />\n        );\n    }\n}\n\nexport default Foo;","// importing bootstrap elements------->\nimport {\n  Container,\n  Card,\n  Row\n} from 'react-bootstrap';\n\n// importing components and router components------------>\nimport { Route, Switch } from 'react-router-dom';\n// import FormSDR from './components/SDR.generator.form';\nimport SplashScreen from './components/SplashScreen';\nimport fileUploader from './components/ImageUploader';\nimport antsdrform from './components/Antd-form';\nimport UserProfile from './components/UserProfile';\nimport OnBoardScreen from './components/OnBoardScreen';\nimport PicturesWall from \"./components/ImageUploader-1\";\n// importing css files----------------->\nimport './App.css';\n\n// importing image files---------------->\nimport sabhilogo from './images/dark.svg';\n\n\n// rendering view------------------------>\nexport default function App() {\n\n  return (\n    <div className=\"App\" style={{\n      'background': 'rgb(95, 130, 189)',\n      'background': 'linear - gradient(180deg, rgba(95, 130, 189, 1) 0 %, rgba(47, 77, 125, 1) 100 %)',\n\n    }} >\n      <Switch>\n        <Route path='/' component={SplashScreen} exact />\n        <Route path='/onboard' component={OnBoardScreen} />\n        <Route path='/ocr' component={PicturesWall} />\n        <Route path='/form_sdr' component={antsdrform} />\n        <Route path='/user_profile' component={UserProfile} />\n      </Switch>\n    </div>\n  );\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'antd/dist/antd.css';\nimport Swal from 'sweetalert2/dist/sweetalert2.js'\nimport 'sweetalert2/src/sweetalert2.scss'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n","const axios = require('axios');\n\nconst apiInstance = axios.create({\n    // baseURL: 'https://sabhi-sdr-test-node.herokuapp.com/',\n    // baseURL: 'http://localhost:2011/',\n    baseURL: 'https://client-server-veramo.herokuapp.com/',\n});\n\nconst sabhiApiInstance = axios.create({\n    // baseURL: 'http://localhost:12345/',\n    baseURL: 'https://sabhi-task.com/',\n});\n\nmodule.exports = {\n    apiInstance,\n    sabhiApiInstance\n}"],"sourceRoot":""}