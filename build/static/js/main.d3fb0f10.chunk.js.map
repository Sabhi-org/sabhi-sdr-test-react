{"version":3,"sources":["images/dark.svg","components/SplashScreen.js","components/ImageUploader.js","components/Antd-form.js","components/UserProfile.js","images/onboarding.png","components/OnBoardScreen.js","App.js","index.js","axios-instance.js"],"names":["SplashScreen","history","useHistory","useEffect","interval","setTimeout","a","push","clearInterval","class","style","display","justifyContent","alignItems","width","src","Logo","PictureUploader","Step","Steps","Dragger","Upload","Anchor","Link","useState","setIsDisable","setIdentityCardFrontUrl","identity","setIdentity","isLoading","setIsloading","getIdentity","apiInstance","get","response","console","log","data","did","localStorage","setItem","getItem","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","handleUploadIdenitytCardFront","base64Img","sabhiApiInstance","post","cnic","message","then","handleUploadIdenitytCardBack","put","handleProfileImageUpload","profileImage","identityCardBackImageUploader","name","multiple","listType","customRequest","onSuccess","onError","onProgress","status","setCurrent","current","accept","beforeUpload","isJpgOrPng","type","onChange","fileList","success","identityCardFrontImageUploader","res","profileImageUploader","pathname","steps","title","content","className","IdcardOutlined","PictureOutlined","spinning","layout","span","htmlFor","marginTop","fontSize","fontWeight","paddingBottom","size","disabled","value","id","orientation","map","item","Antdform","Form","useForm","form","images","setImages","getOcrRecord","identityCardFrontData","identityCardBackData","identityCardFrontImage","identityCardBackImage","setFieldsValue","fullName","nameEnglish","fatherName","fatherNameEnglish","gender","countryOfStay","identityNumber","issueDate","dateOfIssue","birthDate","dateOfBirth","expireDate","dateOfExpiry","permanentAddress","permenantAddress","temporaryAddress","presentAddress","createVerifiablePresentation","values","onFinish","onFinishFailed","errorInfo","gutter","Item","label","rules","required","offset","htmlType","shape","block","FileDoneOutlined","UserProfile","setOmniData","getData","socket","test","io","on","swalWithBootstrapButtons","Swal","mixin","customClass","confirmButton","cancelButton","buttonsStyling","fire","html","allowOutsideClick","icon","showCancelButton","confirmButtonText","cancelButtonText","reverseButtons","isConfirmed","emit","dismiss","DismissReason","cancel","handleswirlTwo","OnBoardScreen","height","OnBoardImage","position","top","background","bordeRadius","onClick","App","path","component","exact","fileUploader","antsdrform","ReactDOM","render","document","getElementById","axios","require","create","baseURL","module","exports"],"mappings":"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","file":"static/js/main.d3fb0f10.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/dark.e4d8b6e7.svg\";","import React, { useEffect } from 'react';\nimport { Row, Col, Space } from 'antd';\nimport { useHistory } from 'react-router-dom';\nimport Logo from '../images/dark.svg';\nimport '../App.css';\n\nexport default function SplashScreen() {\n    let history = useHistory();\n    const style = { display: 'inline-flex', justifyContent: 'center', alignItems: 'center', width: '500px' };\n\n    useEffect(() => {\n\n        let interval = setTimeout(async () => {\n            history.push('/onboard');\n        }, 3000);\n\n        // willUnmout called\n        return () => {\n            clearInterval(interval);\n        }\n    }, []);\n\n    return (\n        <div class=\"container\" style={style}>\n            <img src={Logo} width=\"200px\" />\n        </div>\n    );\n}","\n// importing antd modules for file uploader-------------------->\nimport { Upload, Row, Col, Divider, Form, Input, Button, Steps, message, Spin, Anchor } from 'antd';\nimport { PictureOutlined, IdcardOutlined } from '@ant-design/icons';\nimport { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { apiInstance, sabhiApiInstance } from '../axios-instance';\n\nexport default function PictureUploader() {\n    let history = useHistory();\n    const { Step } = Steps;\n    const { Dragger } = Upload;\n    const { Link } = Anchor;\n\n    const [isDisable, setIsDisable] = useState(false);\n    const [identityCardFrontUrl, setIdentityCardFrontUrl] = useState('');\n    const [identityCardBackUrl, setIdentityCardBackUrl] = useState('');\n    const [identity, setIdentity] = useState(\"\");\n    const [isLoading, setIsloading] = useState(false);\n\n    const labelStyle = {\n        display: \"block\",\n        marginTop: \"30px\",\n        fontSize: \"16px\",\n        fontWeight: \"400\",\n        paddingBottom: \"10px\",\n    };\n\n    const getIdentity = async () => {\n        try {\n            setIsloading(true);\n\n            const response = await apiInstance.get('did');\n            console.log(response);\n            if (response) setIdentity(response.data.did);\n            console.log(identity);\n\n            localStorage.setItem('DID', response.data.did);\n            console.log(localStorage.getItem('DID'));\n            setIsloading(false);\n        } catch (error) {\n            console.log(error);\n        }\n    }\n    useEffect(() => {\n\n        getIdentity();\n\n    }, []);\n\n\n    // function doneBtnHandler() {\n    //     history.push({\n    //         pathname: '/form_sdr',\n    //         state: identity,\n    //     });\n    // }\n\n    function getBase64(file) {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = () => resolve(reader.result);\n            reader.onerror = error => reject(error);\n        });\n    }\n\n    function handleUploadIdenitytCardFront(file) {\n        return new Promise(async (resolve, reject) => {\n            try {\n                const base64Img = await getBase64(file);\n                const response = await sabhiApiInstance.post(\"ocr/cnic/front\", {\n                    did: identity,\n                    cnic: base64Img\n                });\n                console.log(response);\n                if (response) resolve(response.data);\n            } catch (error) {\n                if (error.response) {\n                    message.error(error.response.data.error.message)\n                        .then(() => reject(error));\n                } else {\n                    reject(error);\n                }\n            }\n        });\n    }\n\n    function handleUploadIdenitytCardBack(file) {\n        return new Promise(async (resolve, reject) => {\n            try {\n                const base64Img = await getBase64(file);\n                const response = await sabhiApiInstance.put(\"ocr/cnic/back\", {\n                    did: identity,\n                    cnic: base64Img\n                });\n                if (response) resolve(response.data);\n            } catch (error) {\n                if (error.response) {\n                    message.error(error.response.data.error.message)\n                        .then(() => reject(error));\n                } else {\n                    reject(error);\n                }\n            }\n        });\n    }\n\n    function handleProfileImageUpload(file) {\n        return new Promise(async (resolve, reject) => {\n            try {\n                const base64Img = await getBase64(file);\n                const response = await sabhiApiInstance.put(\"ocr/profile\", {\n                    did: identity,\n                    profileImage: base64Img\n                });\n                if (response) resolve(response.data);\n            } catch (error) {\n                if (error.response) {\n                    message.error(error.response.data.error.message)\n                        .then(() => reject(error));\n                } else {\n                    reject(error);\n                }\n            }\n        });\n    }\n\n    const identityCardBackImageUploader = {\n        name: 'cnic',\n        multiple: false,\n        listType: \"picture\",\n        customRequest: async ({ file, onSuccess, onError, onProgress }) => {\n            try {\n                const res = await handleUploadIdenitytCardBack(file, onProgress);\n                if (res.status) {\n                    onSuccess('ok');\n                    setCurrent(current + 1);\n                }\n            } catch (error) {\n                console.log(error, '   <<<<<<< ');\n                onError(error);\n            }\n        },\n        accept: \".png, .jpg, .jpeg, .tiff\",\n        beforeUpload: (file) => {\n            const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png' || file.type === 'image/jpg' || file.type === 'image/tff';\n            if (!isJpgOrPng) {\n                message.error('You can only upload JPG/PNG/JPEG/TFF file!');\n            }\n            // const isLt2M = file.size / 1024 / 1024 < 2;\n            // if (!isLt2M) {\n            //     message.error('Image must smaller than 2MB!');\n            // }\n            // return isJpgOrPng && isLt2M;\n            return isJpgOrPng;\n        },\n        onChange({ file, fileList }) {\n            const { status } = file;\n            console.log(status);\n            if (status !== 'uploading') {\n                console.log(file, fileList);\n            }\n            if (status === 'done') {\n                message.success(`${file.name} file uploaded successfully.`);\n            } else if (status === 'error') {\n                message.error(`${file.name} file upload failed.`);\n            }\n        },\n    }\n\n    const identityCardFrontImageUploader = {\n        name: 'cnic',\n        multiple: false,\n        listType: \"picture\",\n        customRequest: async ({ file, onSuccess, onError }) => {\n            try {\n\n                setIsDisable(true);\n                const res = await handleUploadIdenitytCardFront(file);\n                setIdentityCardFrontUrl(res.data.cnic);\n                if (res.status) {\n                    onSuccess('ok');\n                    setCurrent(current + 1);\n                }\n            } catch (error) {\n                console.log('i am here in error');\n                console.log(error);\n                onError(error);\n            }\n        },\n        accept: \".png, .jpg, .jpeg, .tiff\",\n        beforeUpload: (file) => {\n            const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png' || file.type === 'image/jpg' || file.type === 'image/tff';\n            if (!isJpgOrPng) {\n                message.error('You can only upload JPG/PNG file!');\n            }\n            // const isLt2M = file.size / 1024 / 1024 < 2;\n            // if (!isLt2M) {\n            //     message.error('Image must smaller than 2MB!');\n            // }\n            // return isJpgOrPng && isLt2M;\n            return isJpgOrPng;\n        },\n        onChange({ file, fileList }) {\n            // setInterval(() => {\n            //     console.log(file, '   <<<<<<<<<<<  ');\n            // }, 1000);\n            const { status } = file;\n            console.log(status);\n            if (status !== 'uploading') {\n                console.log(file, fileList);\n            }\n            if (status === 'done') {\n                message.success(`${file.name} file uploaded successfully.`);\n            } else if (status === 'error') {\n                message.error(`${file.name} file upload failed.`);\n            }\n        },\n    };\n\n\n    const profileImageUploader = {\n        name: 'cnic',\n        multiple: false,\n        listType: \"picture\",\n        customRequest: async ({ file, onSuccess, onError }) => {\n            try {\n                setIsDisable(true);\n                const res = await handleProfileImageUpload(file);\n                setIdentityCardFrontUrl(res.data.cnic);\n                if (res.status) {\n                    onSuccess('ok');\n                    history.push({\n                        pathname: '/form_sdr',\n                    });\n                }\n            } catch (error) {\n                console.log('i am here in error');\n                onError(error);\n            }\n        },\n        accept: \".png, .jpg, .jpeg, .tiff\",\n        beforeUpload: (file) => {\n            const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png' || file.type === 'image/jpg' || file.type === 'image/tff';\n            if (!isJpgOrPng) {\n                message.error('You can only upload JPG/PNG file!');\n            }\n            // const isLt2M = file.size / 1024 / 1024 < 2;\n            // if (!isLt2M) {\n            //     message.error('Image must smaller than 2MB!');\n            // }\n            // return isJpgOrPng && isLt2M;\n            return isJpgOrPng;\n        },\n        onChange({ file, fileList }) {\n            const { status } = file;\n            console.log(status);\n            if (status !== 'uploading') {\n                console.log(file, fileList);\n            }\n            if (status === 'done') {\n                message.success(`${file.name} file uploaded successfully.`);\n            } else if (status === 'error') {\n                message.error(`${file.name} file upload failed.`);\n            }\n        },\n    };\n\n    const steps = [\n        {\n            title: 'Identity Card Front',\n            content: <Dragger {...identityCardFrontImageUploader}>\n                <p className=\"ant-upload-drag-icon\">\n                    <IdcardOutlined />\n                </p>\n                <p className=\"ant-upload-text\">Click or drag identity card front side image to this area to upload</p>\n                <p className=\"ant-upload-hint\">\n                    Make sure the information on the front side of identity card is clear and readable\n                </p>\n            </Dragger>,\n        },\n        {\n            title: 'Identity Card Back',\n            content: <Dragger {...identityCardBackImageUploader}>\n                <p className=\"ant-upload-drag-icon\">\n                    <IdcardOutlined />\n                </p>\n                <p className=\"ant-upload-text\">Click or drag identity card back side image to this area to upload</p>\n                <p className=\"ant-upload-hint\">\n                    Make sure the information on the back side of identity card is clear and readable\n                </p>\n            </Dragger>,\n        },\n        {\n            title: 'Profile Picture',\n            content: <Dragger {...profileImageUploader}>\n                <p className=\"ant-upload-drag-icon\">\n                    <PictureOutlined />\n                </p>\n                <p className=\"ant-upload-text\">Click or drag an image of your face as profile picture</p>\n                <p className=\"ant-upload-hint\">\n                    make sure your face is clear in the image we recommend you use an updated picture\n                </p>\n            </Dragger>,\n        },\n    ];\n\n    const [current, setCurrent] = useState(0);\n\n    const next = () => {\n        setCurrent(current + 1);\n    };\n\n    // const prev = () => {\n    //     setCurrent(current - 1);\n    // };\n    // using history hook to navigate-------->\n\n\n    // rendering uploader---------------------------------------------->\n    return (\n        <>\n            <Spin spinning={isLoading}>\n                <Form\n                    layout=\"vertical\"\n                    name=\"basic\"\n                >\n                    <Row>\n                        <Col span={24}>\n                            <label htmlFor=\"identityValue\" style={labelStyle}>\n                                Identity\n                                <Input size=\"large\" disabled value={identity ?? ''} id=\"identityValue\" />\n                            </label>\n                        </Col>\n                    </Row>\n                    <Divider orientation=\"left\"></Divider>\n                    <Steps current={current}>\n                        {steps.map(item => (\n                            <Step key={item.title} title={item.title} />\n                        ))}\n                    </Steps>\n                    <div className=\"steps-content\">{steps[current].content}</div>\n                    {/* <div className=\"steps-action\">\n                        {current < steps.length - 1 && (\n                            <Button type=\"primary\" onClick={() => next()}>\n                                Next\n                            </Button>\n                        )}\n                        {current === steps.length - 1 && (\n                            <Button type=\"primary\" onClick={doneBtnHandler}>\n                                Done\n                            </Button>\n                        )}\n                    </div> */}\n                </Form>\n            </Spin>\n        </>\n    );\n}","// importing antd components------------------------->\nimport React, { useEffect, useState } from 'react';\nimport { Form, Input, Button, Col, Row, Image, Avatar, Spin, Space } from 'antd';\nimport { useHistory } from 'react-router-dom';\nimport { sabhiApiInstance, apiInstance } from '../axios-instance';\nimport { FileDoneOutlined } from '@ant-design/icons';\n\n// creating antdform----------------->\n\nexport default function Antdform() {\n    const did = localStorage.getItem('DID');\n    let history = useHistory();\n    const [form] = Form.useForm();\n    const [isLoading, setIsloading] = useState('false');\n    const [images, setImages] = useState({});\n\n    const getOcrRecord = async () => {\n        try {\n            setIsloading(true);\n            const response = await sabhiApiInstance.get(`ocr/${did}`);\n            const { identityCardFrontData, identityCardBackData, profileImage, identityCardFrontImage, identityCardBackImage } = response.data.data[0];\n            setImages({ profileImage: profileImage, identityCardFrontImage: identityCardFrontImage, identityCardBackImage: identityCardBackImage });\n            form.setFieldsValue({\n                fullName: identityCardFrontData.nameEnglish,\n                fatherName: identityCardFrontData.fatherNameEnglish,\n                gender: identityCardFrontData.gender,\n                countryOfStay: identityCardFrontData.countryOfStay,\n                identityNumber: identityCardFrontData.identityNumber,\n                issueDate: identityCardFrontData.dateOfIssue,\n                birthDate: identityCardFrontData.dateOfBirth,\n                expireDate: identityCardFrontData.dateOfExpiry,\n                permanentAddress: identityCardBackData.permenantAddress,\n                temporaryAddress: identityCardBackData.presentAddress,\n            });\n            setIsloading(false);\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    useEffect(() => {\n        getOcrRecord();\n    }, []);\n\n\n    const createVerifiablePresentation = async (values) => {\n        try {\n            const response = await apiInstance.post('vp', values);\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    const onFinish = (values) => {\n        setIsloading(true);\n        values.profileImage = images.profileImage;\n        values.did = did;\n        values.identityCardBackImage = images.identityCardBackImage;\n        values.identityCardFrontImage = images.identityCardFrontImage;\n        createVerifiablePresentation(values);\n        setIsloading(false);\n        history.push({\n            pathname: '/user_profile',\n        });\n    };\n\n    const onFinishFailed = (errorInfo) => {\n        console.log('Failed:', errorInfo);\n    };\n\n    // rendering antd form ---------------------->\n    return (\n        <div>\n            <Space size=\"large\">\n                <Spin spinning={isLoading}>\n                    <Form\n                        style={{ marginTop: \"18px\" }}\n                        layout=\"vertical\"\n                        form={form}\n                        name=\"basic\"\n                        onFinish={onFinish}\n                        onFinishFailed={onFinishFailed}\n                    >\n                        <Row>\n                            <Col span={4}>\n                                <Avatar\n                                    style={{ marginTop: \"18px\" }}\n                                    src={<Image src={images.profileImage ?? 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png'} />}\n                                    size={140}\n                                />\n                            </Col>\n                            <Col span={20}>\n                                <Row gutter={16}>\n                                    <Col className=\"gutter-row\" span={2}>\n                                    </Col>\n                                    <Col className=\"gutter-row\" span={11}>\n                                        <Form.Item\n                                            label=\"Name\"\n                                            name=\"fullName\"\n                                            rules={[{ required: true, message: 'Please enter Complete Name' }]}>\n                                            <Input size=\"small\" />\n                                        </Form.Item>\n                                    </Col>\n                                    <Col className=\"gutter-row\" span={11}>\n                                        <Form.Item\n                                            label=\"Father Name\"\n                                            name=\"fatherName\"\n                                            rules={[{ required: true, message: 'Please enter Father Name' }]}>\n                                            <Input size=\"small\" />\n                                        </Form.Item>\n                                    </Col>\n                                </Row>\n                                <Row gutter={16} offset={4}>\n                                    <Col className=\"gutter-row\" span={2}>\n                                    </Col>\n                                    <Col className=\"gutter-row\" span={11}>\n                                        <Form.Item\n                                            label=\"Gender\"\n                                            name=\"gender\"\n                                            rules={[{ required: true, message: 'Please enter gender' }]}>\n                                            <Input size=\"small\" />\n                                        </Form.Item>\n                                    </Col>\n                                    <Col className=\"gutter-row\" span={11}>\n                                        <Form.Item\n                                            label=\"Country of Stay\"\n                                            name=\"countryOfStay\"\n                                            rules={[{ required: true, message: 'Please enter the country of stay' }]}>\n                                            <Input size=\"small\" />\n                                        </Form.Item>\n                                    </Col>\n                                    <Col className=\"gutter-row\" span={6}>\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Row gutter={22}>\n                                <Col className=\"gutter-row\" span={6}>\n                                    <Form.Item\n                                        label=\"Identity Number\"\n                                        name=\"identityNumber\"\n                                        rules={[{ required: true, message: 'Enter the Identity Number' }]}>\n                                        <Input size=\"small\" />\n                                    </Form.Item>\n                                </Col>\n                                <Col className=\"gutter-row\" span={6}>\n                                    <Form.Item\n                                        label=\"Date of Issue\"\n                                        name=\"issueDate\"\n                                        rules={[{ required: true, message: 'Enter Date of Issue' }]}>\n                                        <Input size=\"small\" />\n                                    </Form.Item>\n                                </Col>\n                                <Col className=\"gutter-row\" span={6}>\n                                    <Form.Item\n                                        label=\"Date of Birth\"\n                                        name=\"birthDate\"\n                                        rules={[{ required: true, message: 'Enter Date of Birth' }]}>\n                                        <Input size=\"small\" />\n                                    </Form.Item>\n                                </Col>\n                                <Col className=\"gutter-row\" span={6}>\n                                    <Form.Item\n                                        label=\"Date of Expiry\"\n                                        name=\"expireDate\"\n                                        rules={[{ required: true, message: 'Enter expiry Date' }]}>\n                                        <Input size=\"small\" />\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n                            <Col span={24}>\n                                <Form.Item\n                                    label=\"Permanent Address\"\n                                    name=\"permanentAddress\"\n                                    rules={[{ required: true, message: 'Please enter permanent address' }]}>\n                                    <Input size=\"small\" />\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"Temporary Address\"\n                                    name=\"temporaryAddress\"\n                                    rules={[{ required: true, message: 'Please enter temporary address' }]}>\n                                    <Input size=\"small\" />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col span={4} offset={10}>\n                                <Form.Item>\n                                    <Button type=\"primary\" htmlType=\"submit\" shape=\"round\" size='large' block>\n                                        <FileDoneOutlined />\n                                    Submit\n                            </Button>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Spin>\n            </Space>\n        </div >\n    );\n\n}","import React, { useEffect, useState } from 'react';\nimport { Form, Input, Col, Row, Image, Avatar, Spin, Space, message } from 'antd';\nimport { useHistory } from 'react-router-dom';\nimport { sabhiApiInstance } from \"../axios-instance\";\nimport { io } from \"socket.io-client\";\nimport Swal from 'sweetalert2';\n\nexport default function UserProfile() {\n    const did = localStorage.getItem('DID');\n    console.log(localStorage.getItem('DID'));\n    const [omniData, setOmniData] = useState(\"\");\n    const [form] = Form.useForm();\n    const [isLoading, setIsloading] = useState('false');\n    const [userData, setUserData] = useState(null);\n    const [images, setImages] = useState({});\n\n    useEffect(() => {\n        getData();\n    }, []);\n\n\n    let test = \"\"\n    let socket;\n    // socket\n    useEffect(() => {\n\n        const ENDPOINT = 'http://localhost:12345/';\n        socket = io(ENDPOINT);\n        console.log(socket);\n        socket.on('chat', data => {\n            console.log(data);\n        });\n\n        socket.on('displayOmniCheck', data => {\n            console.log(data);\n            test = data.message;\n            setOmniData(data.message);\n            handleswirlTwo();\n        });\n\n    }, []);\n\n    async function getData() {\n        try {\n            setIsloading(true);\n            const response = await sabhiApiInstance.get(`application/${did}`);\n            console.log(response.data.data[0]);\n            const { fullName, fatherName, profileImage, countryOfStay, gender, identityNumber, issueDate, birthDate, expireDate, permanentAddress, temporaryAddress } = response.data.data[0];\n            setImages({ profileImage: profileImage, });\n            form.setFieldsValue({\n                fullName: fullName.value,\n                fatherName: fatherName.value,\n                gender: gender.value,\n                countryOfStay: countryOfStay.value,\n                identityNumber: identityNumber.value,\n                issueDate: issueDate.value,\n                birthDate: birthDate.value,\n                expireDate: expireDate.value,\n                permanentAddress: permanentAddress.value,\n                temporaryAddress: temporaryAddress.value,\n            });\n            setIsloading(false);\n        } catch (error) {\n            message.error('something went wrong!', error);\n        }\n    }\n\n    function handleswirlTwo() {\n        const swalWithBootstrapButtons = Swal.mixin({\n            customClass: {\n                confirmButton: 'btn btn-success',\n                cancelButton: 'btn btn-danger'\n            },\n            buttonsStyling: false\n        });\n        swalWithBootstrapButtons.fire({\n            title: 'Please confirm following',\n            html: `${test}`,\n            allowOutsideClick: false,\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonText: 'Yes, it is me',\n            cancelButtonText: 'No,it is not me',\n            reverseButtons: true\n        }).then((result) => {\n            if (result.isConfirmed) {\n                console.log('i am confirmed !!! ');\n                socket.emit('omniResponse', { status: true, message: \"omni is accepted!\" });\n                swalWithBootstrapButtons.fire(\n                    'Confirmed!',\n                    'Your data has been confirmed',\n                    'success'\n                )\n            } else if (\n                /* Read more about handling dismissals below */\n                result.dismiss === Swal.DismissReason.cancel\n            ) {\n                console.log('i am rejected !!!');\n                socket.emit('omniResponse', { status: false, message: \"omni is rejected!\" });\n                swalWithBootstrapButtons.fire(\n                    'Cancelled',\n                    'Your data could not be confirmed :(',\n                    'error'\n                )\n            }\n        });\n    }\n\n\n\n    return (\n        <div>\n            <Space size=\"large\">\n                <Spin spinning={isLoading}>\n                    <Form\n                        style={{ marginTop: \"18px\" }}\n                        layout=\"vertical\"\n                        form={form}\n                        name=\"basic\"\n                    >\n                        <Row>\n                            <Col span={4}>\n                                <Avatar\n                                    style={{ marginTop: \"18px\" }}\n                                    src={<Image src={images.profileImage ?? 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png'} />}\n                                    size={140}\n                                />\n                            </Col>\n                            <Col span={20}>\n                                <Row gutter={16}>\n                                    <Col className=\"gutter-row\" span={2}>\n                                    </Col>\n                                    <Col className=\"gutter-row\" span={11}>\n                                        <Form.Item\n                                            label=\"Name\"\n                                            name=\"fullName\">\n                                            <Input size=\"small\" disabled />\n                                        </Form.Item>\n                                    </Col>\n                                    <Col className=\"gutter-row\" span={11}>\n                                        <Form.Item\n                                            label=\"Father Name\"\n                                            name=\"fatherName\">\n                                            <Input size=\"small\" disabled />\n                                        </Form.Item>\n                                    </Col>\n                                </Row>\n                                <Row gutter={16} offset={4}>\n                                    <Col className=\"gutter-row\" span={2}>\n                                    </Col>\n                                    <Col className=\"gutter-row\" span={11}>\n                                        <Form.Item\n                                            label=\"Gender\"\n                                            name=\"gender\">\n                                            <Input size=\"small\" disabled />\n                                        </Form.Item>\n                                    </Col>\n                                    <Col className=\"gutter-row\" span={11}>\n                                        <Form.Item\n                                            label=\"Country of Stay\"\n                                            name=\"countryOfStay\">\n                                            <Input size=\"small\" disabled />\n                                        </Form.Item>\n                                    </Col>\n                                    <Col className=\"gutter-row\" span={6}>\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Row gutter={22}>\n                                <Col className=\"gutter-row\" span={6}>\n                                    <Form.Item\n                                        label=\"Identity Number\"\n                                        name=\"identityNumber\">\n                                        <Input size=\"small\" disabled />\n                                    </Form.Item>\n                                </Col>\n                                <Col className=\"gutter-row\" span={6}>\n                                    <Form.Item\n                                        label=\"Date of Issue\"\n                                        name=\"issueDate\">\n                                        <Input size=\"small\" disabled />\n                                    </Form.Item>\n                                </Col>\n                                <Col className=\"gutter-row\" span={6}>\n                                    <Form.Item\n                                        label=\"Date of Birth\"\n                                        name=\"birthDate\">\n                                        <Input size=\"small\" disabled />\n                                    </Form.Item>\n                                </Col>\n                                <Col className=\"gutter-row\" span={6}>\n                                    <Form.Item\n                                        label=\"Date of Expiry\"\n                                        name=\"expireDate\">\n                                        <Input size=\"small\" disabled />\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n                            <Col span={24}>\n                                <Form.Item\n                                    label=\"Permanent Address\"\n                                    name=\"permanentAddress\">\n                                    <Input size=\"small\" disabled />\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"Temporary Address\"\n                                    name=\"temporaryAddress\">\n                                    <Input size=\"small\" disabled />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n                    <Row>\n                        Verified By: XYZ\n                    </Row>\n                </Spin>\n            </Space>\n        </div >\n    );\n}","export default __webpack_public_path__ + \"static/media/onboarding.80f4a645.png\";","import React, { useEffect } from 'react';\nimport { Row, Col, Button, message } from 'antd';\nimport { useHistory } from 'react-router-dom';\nimport { UserAddOutlined } from '@ant-design/icons';\nimport OnBoardImage from '../images/onboarding.png';\nimport '../App.css';\n\nexport default function OnBoardScreen() {\n    let history = useHistory();\n    const style = { display: 'inline-flex', justifyContent: 'center', alignItems: 'center', width: '500px', height: '500px' };\n    const btnStyle = { position: 'absolute', top: '600px', background: '#4DDFBC', bordeRadius: '16px', 'borderColor': '#4DDFBC' };\n\n    const createIdentity = () => {\n        message.success('i am hitting ...');\n    }\n\n    return (\n\n        <div class=\"container\" style={style}>\n            <img src={OnBoardImage} width=\"200px\" />\n            <Button type=\"primary\" shape=\"round\" style={btnStyle} size='large' onClick={createIdentity}>\n                Create Identity\n            </Button>\n        </div>\n\n\n    );\n}","// importing bootstrap elements------->\nimport {\n  Container,\n  Card,\n  Row\n} from 'react-bootstrap';\n\n// importing components and router components------------>\nimport { Route, Switch } from 'react-router-dom';\n// import FormSDR from './components/SDR.generator.form';\nimport SplashScreen from './components/SplashScreen';\nimport fileUploader from './components/ImageUploader';\nimport antsdrform from './components/Antd-form';\nimport UserProfile from './components/UserProfile';\nimport OnBoardScreen from './components/OnBoardScreen';\n// importing css files----------------->\nimport './App.css';\n\n// importing image files---------------->\nimport sabhilogo from './images/dark.svg';\n\n\n// rendering view------------------------>\nexport default function App() {\n\n  return (\n    <div className=\"App\" style={{\n      'background': 'rgb(95, 130, 189)',\n      'background': 'linear - gradient(180deg, rgba(95, 130, 189, 1) 0 %, rgba(47, 77, 125, 1) 100 %)',\n\n    }} >\n      <Switch>\n        <Route path='/' component={SplashScreen} exact />\n        <Route path='/onboard' component={OnBoardScreen} />\n        <Route path='/parse_sdr' component={fileUploader} />\n        <Route path='/form_sdr' component={antsdrform} />\n        <Route path='/user_profile' component={UserProfile} />\n      </Switch>\n    </div>\n  );\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'antd/dist/antd.css';\nimport Swal from 'sweetalert2/dist/sweetalert2.js'\nimport 'sweetalert2/src/sweetalert2.scss'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n","const axios = require('axios');\n\nconst apiInstance = axios.create({\n    // baseURL: 'https://sabhi-sdr-test-node.herokuapp.com/',\n    // baseURL: 'http://localhost:2011/',\n    baseURL: 'https://client-server-veramo.herokuapp.com/',\n});\n\nconst sabhiApiInstance = axios.create({\n    // baseURL: 'http://localhost:12345/',\n    baseURL: 'https://sabhi-task.com/',\n});\n\nmodule.exports = {\n    apiInstance,\n    sabhiApiInstance\n}"],"sourceRoot":""}